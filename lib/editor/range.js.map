{"version":3,"file":"range.js","names":["whitespacePredicate","index","offset","part","text","trim","Range","constructor","model","positionA","positionB","bIsLarger","compare","_start","_end","_lastStart","_initializedEmpty","moveStartForwards","delta","forwardsWhile","wasInitializedEmpty","setWasEmpty","value","getLastStartingPosition","setLastStartingPosition","position","moveEndBackwards","backwardsWhile","expandBackwardsWhile","predicate","expandForwardsWhile","iteratePartsBetween","startIdx","endIdx","t","substring","replace","parts","newLength","reduce","sum","length","oldLength","replaceRange","serializedPart","serialize","newPart","partCreator","deserializePart","push","len","start","end"],"sources":["../../src/editor/range.ts"],"sourcesContent":["/*\nCopyright 2019 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport EditorModel from \"./model\";\nimport DocumentPosition, { Predicate } from \"./position\";\nimport { Part } from \"./parts\";\n\nconst whitespacePredicate: Predicate = (index, offset, part) => {\n    return part.text[offset].trim() === \"\";\n};\n\nexport default class Range {\n    private _start: DocumentPosition;\n    private _end: DocumentPosition;\n    private _lastStart: DocumentPosition;\n    private _initializedEmpty: boolean;\n\n    constructor(public readonly model: EditorModel, positionA: DocumentPosition, positionB = positionA) {\n        const bIsLarger = positionA.compare(positionB) < 0;\n        this._start = bIsLarger ? positionA : positionB;\n        this._end = bIsLarger ? positionB : positionA;\n        this._lastStart = this._start;\n        this._initializedEmpty = this._start.index === this._end.index && this._start.offset == this._end.offset;\n    }\n\n    public moveStartForwards(delta: number): void {\n        this._start = this._start.forwardsWhile(this.model, () => {\n            delta -= 1;\n            return delta >= 0;\n        });\n    }\n\n    public wasInitializedEmpty(): boolean {\n        return this._initializedEmpty;\n    }\n\n    public setWasEmpty(value: boolean) {\n        this._initializedEmpty = value;\n    }\n\n    public getLastStartingPosition(): DocumentPosition {\n        return this._lastStart;\n    }\n\n    public setLastStartingPosition(position: DocumentPosition): void {\n        this._lastStart = position;\n    }\n\n    public moveEndBackwards(delta: number): void {\n        this._end = this._end.backwardsWhile(this.model, () => {\n            delta -= 1;\n            return delta >= 0;\n        });\n    }\n\n    public trim(): void {\n        if (this.text.trim() === \"\") {\n            this._start = this._end;\n            return;\n        }\n        this._start = this._start.forwardsWhile(this.model, whitespacePredicate);\n        this._end = this._end.backwardsWhile(this.model, whitespacePredicate);\n    }\n\n    public expandBackwardsWhile(predicate: Predicate): void {\n        this._start = this._start.backwardsWhile(this.model, predicate);\n    }\n\n    public expandForwardsWhile(predicate: Predicate): void {\n        this._end = this._end.forwardsWhile(this.model, predicate);\n    }\n\n    public get text(): string {\n        let text = \"\";\n        this._start.iteratePartsBetween(this._end, this.model, (part, startIdx, endIdx) => {\n            const t = part.text.substring(startIdx, endIdx);\n            text = text + t;\n        });\n        return text;\n    }\n\n    /**\n     * Splits the model at the range boundaries and replaces with the given parts.\n     * Should be run inside a `model.transform()` callback.\n     * @param {Part[]} parts the parts to replace the range with\n     * @return {Number} the net amount of characters added, can be negative.\n     */\n    public replace(parts: Part[]): number {\n        const newLength = parts.reduce((sum, part) => sum + part.text.length, 0);\n        let oldLength = 0;\n        this._start.iteratePartsBetween(this._end, this.model, (part, startIdx, endIdx) => {\n            oldLength += endIdx - startIdx;\n        });\n        this.model.replaceRange(this._start, this._end, parts);\n        return newLength - oldLength;\n    }\n\n    /**\n     * Returns a copy of the (partial) parts within the range.\n     * For partial parts, only the text is adjusted to the part that intersects with the range.\n     */\n    public get parts(): Part[] {\n        const parts: Part[] = [];\n        this._start.iteratePartsBetween(this._end, this.model, (part, startIdx, endIdx) => {\n            const serializedPart = part.serialize();\n            serializedPart.text = part.text.substring(startIdx, endIdx);\n            const newPart = this.model.partCreator.deserializePart(serializedPart);\n            parts.push(newPart);\n        });\n        return parts;\n    }\n\n    public get length(): number {\n        let len = 0;\n        this._start.iteratePartsBetween(this._end, this.model, (part, startIdx, endIdx) => {\n            len += endIdx - startIdx;\n        });\n        return len;\n    }\n\n    public get start(): DocumentPosition {\n        return this._start;\n    }\n\n    public get end(): DocumentPosition {\n        return this._end;\n    }\n}\n"],"mappings":"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"}