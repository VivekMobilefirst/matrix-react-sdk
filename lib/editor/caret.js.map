{"version":3,"file":"caret.js","names":["setSelection","editor","model","selection","Range","setDocumentRangeSelection","setCaretPosition","range","sel","document","getSelection","removeAllRanges","selectionRange","createRange","start","getNodeAndOffsetForPosition","setStart","node","offset","end","setEnd","addRange","caretPosition","isEmpty","collapse","rangeCount","existingRange","getRangeAt","startContainer","startOffset","collapsed","position","lineIndex","nodeIndex","getLineAndNodePosition","lineNode","childNodes","focusNode","nodeType","Node","ELEMENT_NODE","firstChild","parts","partIndex","index","lineResult","findNodeInLineForPart","moveOutOfUnselectablePart","prevPart","i","part","type","Type","Newline","needsCaretNodeBefore","nextPart","isLastOfLine","needsCaretNodeAfter","acceptsCaret","text","length"],"sources":["../../src/editor/caret.ts"],"sourcesContent":["/*\nCopyright 2019 New Vector Ltd\nCopyright 2019 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { needsCaretNodeBefore, needsCaretNodeAfter } from \"./render\";\nimport Range from \"./range\";\nimport EditorModel from \"./model\";\nimport DocumentPosition, { IPosition } from \"./position\";\nimport { Part, Type } from \"./parts\";\n\nexport type Caret = Range | DocumentPosition;\n\nexport function setSelection(editor: HTMLDivElement, model: EditorModel, selection: Range | IPosition) {\n    if (selection instanceof Range) {\n        setDocumentRangeSelection(editor, model, selection);\n    } else {\n        setCaretPosition(editor, model, selection);\n    }\n}\n\nfunction setDocumentRangeSelection(editor: HTMLDivElement, model: EditorModel, range: Range) {\n    const sel = document.getSelection();\n    sel.removeAllRanges();\n    const selectionRange = document.createRange();\n    const start = getNodeAndOffsetForPosition(editor, model, range.start);\n    selectionRange.setStart(start.node, start.offset);\n    const end = getNodeAndOffsetForPosition(editor, model, range.end);\n    selectionRange.setEnd(end.node, end.offset);\n    sel.addRange(selectionRange);\n}\n\nexport function setCaretPosition(editor: HTMLDivElement, model: EditorModel, caretPosition: IPosition) {\n    if (model.isEmpty) return; // selection can't possibly be wrong, so avoid a reflow\n\n    const range = document.createRange();\n    const { node, offset } = getNodeAndOffsetForPosition(editor, model, caretPosition);\n    range.setStart(node, offset);\n    range.collapse(true);\n\n    const sel = document.getSelection();\n    if (sel.rangeCount === 1) {\n        const existingRange = sel.getRangeAt(0);\n        if (\n            existingRange.startContainer === range.startContainer &&\n            existingRange.startOffset === range.startOffset &&\n            existingRange.collapsed === range.collapsed\n        ) {\n            // If the selection matches, it's important to leave it alone.\n            // Recreating the selection state in at least Chrome can cause\n            // strange side effects, like touch bar flickering on every key.\n            // See https://github.com/vector-im/element-web/issues/9299\n            return;\n        }\n    }\n    sel.removeAllRanges();\n    sel.addRange(range);\n}\n\nfunction getNodeAndOffsetForPosition(editor: HTMLDivElement, model: EditorModel, position: IPosition) {\n    const { offset, lineIndex, nodeIndex } = getLineAndNodePosition(model, position);\n    const lineNode = editor.childNodes[lineIndex];\n\n    let focusNode;\n    // empty line with just a <br>\n    if (nodeIndex === -1) {\n        focusNode = lineNode;\n    } else {\n        focusNode = lineNode.childNodes[nodeIndex];\n        // make sure we have a text node\n        if (focusNode.nodeType === Node.ELEMENT_NODE && focusNode.firstChild) {\n            focusNode = focusNode.firstChild;\n        }\n    }\n    return { node: focusNode, offset };\n}\n\nexport function getLineAndNodePosition(model: EditorModel, caretPosition: IPosition) {\n    const { parts } = model;\n    const partIndex = caretPosition.index;\n    const lineResult = findNodeInLineForPart(parts, partIndex);\n    const { lineIndex } = lineResult;\n    let { nodeIndex } = lineResult;\n    let { offset } = caretPosition;\n    // we're at an empty line between a newline part\n    // and another newline part or end/start of parts.\n    // set offset to 0 so it gets set to the <br> inside the line container\n    if (nodeIndex === -1) {\n        offset = 0;\n    } else {\n        // move caret out of uneditable part (into caret node, or empty line br) if needed\n        ({ nodeIndex, offset } = moveOutOfUnselectablePart(parts, partIndex, nodeIndex, offset));\n    }\n    return { lineIndex, nodeIndex, offset };\n}\n\nfunction findNodeInLineForPart(parts: Part[], partIndex: number) {\n    let lineIndex = 0;\n    let nodeIndex = -1;\n\n    let prevPart = null;\n    // go through to parts up till (and including) the index\n    // to find newline parts\n    for (let i = 0; i <= partIndex; ++i) {\n        const part = parts[i];\n        if (part.type === Type.Newline) {\n            lineIndex += 1;\n            nodeIndex = -1;\n            prevPart = null;\n        } else {\n            nodeIndex += 1;\n            if (needsCaretNodeBefore(part, prevPart)) {\n                nodeIndex += 1;\n            }\n            // only jump over caret node if we're not at our destination node already,\n            // as we'll assume in moveOutOfUnselectablePart that nodeIndex\n            // refers to the node  corresponding to the part,\n            // and not an adjacent caret node\n            if (i < partIndex) {\n                const nextPart = parts[i + 1];\n                const isLastOfLine = !nextPart || nextPart.type === Type.Newline;\n                if (needsCaretNodeAfter(part, isLastOfLine)) {\n                    nodeIndex += 1;\n                }\n            }\n            prevPart = part;\n        }\n    }\n\n    return { lineIndex, nodeIndex };\n}\n\nfunction moveOutOfUnselectablePart(parts: Part[], partIndex: number, nodeIndex: number, offset: number) {\n    // move caret before or after unselectable part\n    const part = parts[partIndex];\n    if (part && !part.acceptsCaret) {\n        if (offset === 0) {\n            nodeIndex -= 1;\n            const prevPart = parts[partIndex - 1];\n            // if the previous node is a caret node, it's empty\n            // so the offset can stay at 0\n            // only when it's not, we need to set the offset\n            // at the end of the node\n            if (!needsCaretNodeBefore(part, prevPart)) {\n                offset = prevPart.text.length;\n            }\n        } else {\n            nodeIndex += 1;\n            offset = 0;\n        }\n    }\n    return { nodeIndex, offset };\n}\n"],"mappings":"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"}