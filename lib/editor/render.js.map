{"version":3,"file":"render.js","names":["needsCaretNodeBefore","part","prevPart","isFirst","type","Type","Newline","acceptsCaret","needsCaretNodeAfter","isLastOfLine","insertAfter","node","nodeToInsert","next","nextSibling","parentElement","insertBefore","appendChild","CARET_NODE_CHAR","createCaretNode","span","document","createElement","className","createTextNode","updateCaretNode","textContent","isCaretNode","tagName","removeNextSiblings","removeNode","remove","removeChildren","parent","firstChild","reconcileLine","lineContainer","parts","currentNode","lastPart","length","canUpdateDOMNode","nextNode","removeChild","updateDOMNode","toDOMNode","caretNode","reconcileEmptyLine","foundBR","partNode","renderModel","editor","model","lines","reduce","linesArr","push","lastLine","forEach","i","childNodes","children"],"sources":["../../src/editor/render.ts"],"sourcesContent":["/*\nCopyright 2019 New Vector Ltd\nCopyright 2019 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { Part, Type } from \"./parts\";\nimport EditorModel from \"./model\";\n\nexport function needsCaretNodeBefore(part: Part, prevPart: Part): boolean {\n    const isFirst = !prevPart || prevPart.type === Type.Newline;\n    return !part.acceptsCaret && (isFirst || !prevPart.acceptsCaret);\n}\n\nexport function needsCaretNodeAfter(part: Part, isLastOfLine: boolean): boolean {\n    return !part.acceptsCaret && isLastOfLine;\n}\n\nfunction insertAfter(node: HTMLElement, nodeToInsert: HTMLElement): void {\n    const next = node.nextSibling;\n    if (next) {\n        node.parentElement.insertBefore(nodeToInsert, next);\n    } else {\n        node.parentElement.appendChild(nodeToInsert);\n    }\n}\n\n// Use a BOM marker for caret nodes.\n// On a first test, they seem to be filtered out when copying text out of the editor,\n// but this could be platform dependent.\n// As a precautionary measure, I chose the character that slate also uses.\nexport const CARET_NODE_CHAR = \"\\ufeff\";\n// a caret node is a node that allows the caret to be placed\n// where otherwise it wouldn't be possible\n// (e.g. next to a pill span without adjacent text node)\nfunction createCaretNode(): HTMLElement {\n    const span = document.createElement(\"span\");\n    span.className = \"caretNode\";\n    span.appendChild(document.createTextNode(CARET_NODE_CHAR));\n    return span;\n}\n\nfunction updateCaretNode(node: HTMLElement): void {\n    // ensure the caret node contains only a zero-width space\n    if (node.textContent !== CARET_NODE_CHAR) {\n        node.textContent = CARET_NODE_CHAR;\n    }\n}\n\nexport function isCaretNode(node: HTMLElement): boolean {\n    return node && node.tagName === \"SPAN\" && node.className === \"caretNode\";\n}\n\nfunction removeNextSiblings(node: ChildNode): void {\n    if (!node) {\n        return;\n    }\n    node = node.nextSibling;\n    while (node) {\n        const removeNode = node;\n        node = node.nextSibling;\n        removeNode.remove();\n    }\n}\n\nfunction removeChildren(parent: HTMLElement): void {\n    const firstChild = parent.firstChild;\n    if (firstChild) {\n        removeNextSiblings(firstChild);\n        firstChild.remove();\n    }\n}\n\nfunction reconcileLine(lineContainer: ChildNode, parts: Part[]): void {\n    let currentNode;\n    let prevPart;\n    const lastPart = parts[parts.length - 1];\n\n    for (const part of parts) {\n        const isFirst = !prevPart;\n        currentNode = isFirst ? lineContainer.firstChild : currentNode.nextSibling;\n\n        if (needsCaretNodeBefore(part, prevPart)) {\n            if (isCaretNode(currentNode)) {\n                updateCaretNode(currentNode);\n                currentNode = currentNode.nextSibling;\n            } else {\n                lineContainer.insertBefore(createCaretNode(), currentNode);\n            }\n        }\n        // remove nodes until matching current part\n        while (currentNode && !part.canUpdateDOMNode(currentNode)) {\n            const nextNode = currentNode.nextSibling;\n            lineContainer.removeChild(currentNode);\n            currentNode = nextNode;\n        }\n        // update or insert node for current part\n        if (currentNode && part) {\n            part.updateDOMNode(currentNode);\n        } else if (part) {\n            currentNode = part.toDOMNode();\n            // hooks up nextSibling for next iteration\n            lineContainer.appendChild(currentNode);\n        }\n\n        if (needsCaretNodeAfter(part, part === lastPart)) {\n            if (isCaretNode(currentNode.nextSibling)) {\n                currentNode = currentNode.nextSibling;\n                updateCaretNode(currentNode);\n            } else {\n                const caretNode = createCaretNode();\n                insertAfter(currentNode, caretNode);\n                currentNode = caretNode;\n            }\n        }\n\n        prevPart = part;\n    }\n\n    removeNextSiblings(currentNode);\n}\n\nfunction reconcileEmptyLine(lineContainer: HTMLElement): void {\n    // empty div needs to have a BR in it to give it height\n    let foundBR = false;\n    let partNode = lineContainer.firstChild;\n    while (partNode) {\n        const nextNode = partNode.nextSibling;\n        if (!foundBR && (partNode as HTMLElement).tagName === \"BR\") {\n            foundBR = true;\n        } else {\n            partNode.remove();\n        }\n        partNode = nextNode;\n    }\n    if (!foundBR) {\n        lineContainer.appendChild(document.createElement(\"br\"));\n    }\n}\n\nexport function renderModel(editor: HTMLDivElement, model: EditorModel): void {\n    const lines = model.parts.reduce((linesArr, part) => {\n        if (part.type === Type.Newline) {\n            linesArr.push([]);\n        } else {\n            const lastLine = linesArr[linesArr.length - 1];\n            lastLine.push(part);\n        }\n        return linesArr;\n    }, [[]]);\n    lines.forEach((parts, i) => {\n        // find first (and remove anything else) div without className\n        // (as browsers insert these in contenteditable) line container\n        let lineContainer = editor.childNodes[i];\n        while (lineContainer && ((<Element>lineContainer).tagName !== \"DIV\" || !!(<Element>lineContainer).className)) {\n            editor.removeChild(lineContainer);\n            lineContainer = editor.childNodes[i];\n        }\n        if (!lineContainer) {\n            lineContainer = document.createElement(\"div\");\n            editor.appendChild(lineContainer);\n        }\n\n        if (parts.length) {\n            reconcileLine(lineContainer, parts);\n        } else {\n            reconcileEmptyLine(lineContainer as HTMLElement);\n        }\n    });\n    if (lines.length) {\n        removeNextSiblings(editor.children[lines.length - 1]);\n    } else {\n        removeChildren(editor);\n    }\n}\n"],"mappings":"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"}