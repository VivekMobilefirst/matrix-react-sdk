{"version":3,"file":"KeyboardShortcutUtils.js","names":["getUIOnlyShortcuts","ctrlEnterToSend","SettingsStore","getValue","keyboardShortcuts","KeyBindingAction","SendMessage","default","key","Key","ENTER","ctrlOrCmdKey","displayName","_td","NewLine","shiftKey","CompleteAutocomplete","ForceCompleteAutocomplete","TAB","SearchInRoom","F","PlatformPeg","get","overrideBrowserShortcuts","SwitchToSpaceByNumber","DIGITS","getKeyboardShortcuts","Object","keys","KEYBOARD_SHORTCUTS","filter","k","controller","settingDisabled","MAC_ONLY_SHORTCUTS","includes","IS_MAC","DESKTOP_SHORTCUTS","reduce","o","getKeyboardShortcutsForUI","entries","acc","value","getKeyboardShortcutValue","name","getKeyboardShortcutDisplayName","keyboardShortcutDisplayName","_t"],"sources":["../../src/accessibility/KeyboardShortcutUtils.ts"],"sourcesContent":["/*\nCopyright 2022 Å imon Brandner <simon.bra.ag@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { KeyCombo } from \"../KeyBindingsManager\";\nimport { IS_MAC, Key } from \"../Keyboard\";\nimport { _t, _td } from \"../languageHandler\";\nimport PlatformPeg from \"../PlatformPeg\";\nimport SettingsStore from \"../settings/SettingsStore\";\nimport {\n    DESKTOP_SHORTCUTS,\n    DIGITS,\n    IKeyboardShortcuts,\n    KeyBindingAction,\n    KEYBOARD_SHORTCUTS,\n    MAC_ONLY_SHORTCUTS,\n} from \"./KeyboardShortcuts\";\n\n/**\n * This function gets the keyboard shortcuts that should be presented in the UI\n * but they shouldn't be consumed by KeyBindingDefaults. That means that these\n * have to be manually mirrored in KeyBindingDefaults.\n */\nconst getUIOnlyShortcuts = (): IKeyboardShortcuts => {\n    const ctrlEnterToSend = SettingsStore.getValue('MessageComposerInput.ctrlEnterToSend');\n\n    const keyboardShortcuts: IKeyboardShortcuts = {\n        [KeyBindingAction.SendMessage]: {\n            default: {\n                key: Key.ENTER,\n                ctrlOrCmdKey: ctrlEnterToSend,\n            },\n            displayName: _td(\"Send message\"),\n        },\n        [KeyBindingAction.NewLine]: {\n            default: {\n                key: Key.ENTER,\n                shiftKey: !ctrlEnterToSend,\n            },\n            displayName: _td(\"New line\"),\n        },\n        [KeyBindingAction.CompleteAutocomplete]: {\n            default: {\n                key: Key.ENTER,\n            },\n            displayName: _td(\"Complete\"),\n        },\n        [KeyBindingAction.ForceCompleteAutocomplete]: {\n            default: {\n                key: Key.TAB,\n            },\n            displayName: _td(\"Force complete\"),\n        },\n        [KeyBindingAction.SearchInRoom]: {\n            default: {\n                ctrlOrCmdKey: true,\n                key: Key.F,\n            },\n            displayName: _td(\"Search (must be enabled)\"),\n        },\n    };\n\n    if (PlatformPeg.get().overrideBrowserShortcuts()) {\n        // XXX: This keyboard shortcut isn't manually added to\n        // KeyBindingDefaults as it can't be easily handled by the\n        // KeyBindingManager\n        keyboardShortcuts[KeyBindingAction.SwitchToSpaceByNumber] = {\n            default: {\n                ctrlOrCmdKey: true,\n                key: DIGITS,\n            },\n            displayName: _td(\"Switch to space by number\"),\n        };\n    }\n\n    return keyboardShortcuts;\n};\n\n/**\n * This function gets keyboard shortcuts that can be consumed by the KeyBindingDefaults.\n */\nexport const getKeyboardShortcuts = (): IKeyboardShortcuts => {\n    const overrideBrowserShortcuts = PlatformPeg.get().overrideBrowserShortcuts();\n\n    return Object.keys(KEYBOARD_SHORTCUTS).filter((k: KeyBindingAction) => {\n        if (KEYBOARD_SHORTCUTS[k]?.controller?.settingDisabled) return false;\n        if (MAC_ONLY_SHORTCUTS.includes(k) && !IS_MAC) return false;\n        if (DESKTOP_SHORTCUTS.includes(k) && !overrideBrowserShortcuts) return false;\n\n        return true;\n    }).reduce((o, key) => {\n        o[key] = KEYBOARD_SHORTCUTS[key];\n        return o;\n    }, {} as IKeyboardShortcuts);\n};\n\n/**\n * Gets keyboard shortcuts that should be presented to the user in the UI.\n */\nexport const getKeyboardShortcutsForUI = (): IKeyboardShortcuts => {\n    const entries = [\n        ...Object.entries(getUIOnlyShortcuts()),\n        ...Object.entries(getKeyboardShortcuts()),\n    ];\n\n    return entries.reduce((acc, [key, value]) => {\n        acc[key] = value;\n        return acc;\n    }, {} as IKeyboardShortcuts);\n};\n\nexport const getKeyboardShortcutValue = (name: string): KeyCombo => {\n    return getKeyboardShortcutsForUI()[name]?.default;\n};\n\nexport const getKeyboardShortcutDisplayName = (name: string): string | null => {\n    const keyboardShortcutDisplayName = getKeyboardShortcutsForUI()[name]?.displayName;\n    return keyboardShortcutDisplayName && _t(keyboardShortcutDisplayName);\n};\n"],"mappings":"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"}