{"version":3,"file":"IBodyProps.js","names":[],"sources":["../../../../src/components/views/messages/IBodyProps.ts"],"sourcesContent":["/*\nCopyright 2021 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React, { LegacyRef } from \"react\";\nimport { MatrixEvent } from \"matrix-js-sdk/src/models/event\";\nimport { Relations } from \"matrix-js-sdk/src/models/relations\";\n\nimport { MediaEventHelper } from \"../../../utils/MediaEventHelper\";\nimport EditorStateTransfer from \"../../../utils/EditorStateTransfer\";\nimport { RoomPermalinkCreator } from \"../../../utils/permalinks/Permalinks\";\n\nexport interface IBodyProps {\n    mxEvent: MatrixEvent;\n\n    /* a list of words to highlight */\n    highlights?: string[];\n\n    /* link URL for the highlights */\n    highlightLink?: string;\n\n    /* callback called when dynamic content in events are loaded */\n    onHeightChanged: () => void;\n\n    showUrlPreview?: boolean;\n    forExport?: boolean;\n    maxImageHeight?: number;\n    replacingEventId?: string;\n    editState?: EditorStateTransfer;\n    onMessageAllowed: () => void; // TODO: Docs\n    permalinkCreator: RoomPermalinkCreator;\n    mediaEventHelper: MediaEventHelper;\n\n    /*\n    If present and `true`, the message has been marked as hidden pending moderation\n    (see MSC3531) **but** the current user can see the message nevertheless (with\n    a marker), either because they are a moderator or because they are the original\n    author of the message.\n    */\n    isSeeingThroughMessageHiddenForModeration?: boolean;\n\n    // helper function to access relations for this event\n    getRelationsForEvent?: (eventId: string, relationType: string, eventType: string) => Relations;\n\n    ref?: React.RefObject<any> | LegacyRef<any>;\n}\n"],"mappings":""}