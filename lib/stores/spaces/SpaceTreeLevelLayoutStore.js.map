{"version":3,"file":"SpaceTreeLevelLayoutStore.js","names":["getSpaceCollapsedKey","roomId","parents","separator","path","entry","entries","SpaceTreeLevelLayoutStore","instance","internalInstance","setSpaceCollapsedState","collapsed","localStorage","setItem","toString","getSpaceCollapsedState","fallback","collapsedLocalStorage","getItem"],"sources":["../../../src/stores/spaces/SpaceTreeLevelLayoutStore.ts"],"sourcesContent":["/*\nCopyright 2021 Å imon Brandner <simon.bra.ag@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nconst getSpaceCollapsedKey = (roomId: string, parents: Set<string>): string => {\n    const separator = \"/\";\n    let path = \"\";\n    if (parents) {\n        for (const entry of parents.entries()) {\n            path += entry + separator;\n        }\n    }\n    return `mx_space_collapsed_${path + roomId}`;\n};\n\nexport default class SpaceTreeLevelLayoutStore {\n    private static internalInstance: SpaceTreeLevelLayoutStore;\n\n    public static get instance(): SpaceTreeLevelLayoutStore {\n        if (!SpaceTreeLevelLayoutStore.internalInstance) {\n            SpaceTreeLevelLayoutStore.internalInstance = new SpaceTreeLevelLayoutStore();\n        }\n        return SpaceTreeLevelLayoutStore.internalInstance;\n    }\n\n    public setSpaceCollapsedState(roomId: string, parents: Set<string>, collapsed: boolean) {\n        // XXX: localStorage doesn't allow booleans\n        localStorage.setItem(getSpaceCollapsedKey(roomId, parents), collapsed.toString());\n    }\n\n    public getSpaceCollapsedState(roomId: string, parents: Set<string>, fallback: boolean): boolean {\n        const collapsedLocalStorage = localStorage.getItem(getSpaceCollapsedKey(roomId, parents));\n        // XXX: localStorage doesn't allow booleans\n        return collapsedLocalStorage ? collapsedLocalStorage === \"true\" : fallback;\n    }\n}\n"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,oBAAoB,GAAG,CAACC,MAAD,EAAiBC,OAAjB,KAAkD;EAC3E,MAAMC,SAAS,GAAG,GAAlB;EACA,IAAIC,IAAI,GAAG,EAAX;;EACA,IAAIF,OAAJ,EAAa;IACT,KAAK,MAAMG,KAAX,IAAoBH,OAAO,CAACI,OAAR,EAApB,EAAuC;MACnCF,IAAI,IAAIC,KAAK,GAAGF,SAAhB;IACH;EACJ;;EACD,OAAQ,sBAAqBC,IAAI,GAAGH,MAAO,EAA3C;AACH,CATD;;AAWe,MAAMM,yBAAN,CAAgC;EAGjB,WAARC,QAAQ,GAA8B;IACpD,IAAI,CAACD,yBAAyB,CAACE,gBAA/B,EAAiD;MAC7CF,yBAAyB,CAACE,gBAA1B,GAA6C,IAAIF,yBAAJ,EAA7C;IACH;;IACD,OAAOA,yBAAyB,CAACE,gBAAjC;EACH;;EAEMC,sBAAsB,CAACT,MAAD,EAAiBC,OAAjB,EAAuCS,SAAvC,EAA2D;IACpF;IACAC,YAAY,CAACC,OAAb,CAAqBb,oBAAoB,CAACC,MAAD,EAASC,OAAT,CAAzC,EAA4DS,SAAS,CAACG,QAAV,EAA5D;EACH;;EAEMC,sBAAsB,CAACd,MAAD,EAAiBC,OAAjB,EAAuCc,QAAvC,EAAmE;IAC5F,MAAMC,qBAAqB,GAAGL,YAAY,CAACM,OAAb,CAAqBlB,oBAAoB,CAACC,MAAD,EAASC,OAAT,CAAzC,CAA9B,CAD4F,CAE5F;;IACA,OAAOe,qBAAqB,GAAGA,qBAAqB,KAAK,MAA7B,GAAsCD,QAAlE;EACH;;AAnB0C;;;8BAA1BT,yB"}