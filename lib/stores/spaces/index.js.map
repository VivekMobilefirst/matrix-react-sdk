{"version":3,"file":"index.js","names":["UPDATE_TOP_LEVEL_SPACES","Symbol","UPDATE_INVITED_SPACES","UPDATE_SELECTED_SPACE","UPDATE_HOME_BEHAVIOUR","UPDATE_SUGGESTED_ROOMS","MetaSpace","getMetaSpaceName","spaceKey","allRoomsInHome","Home","_t","Favourites","People","Orphans","isMetaSpace"],"sources":["../../../src/stores/spaces/index.ts"],"sourcesContent":["/*\nCopyright 2021 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { Room } from \"matrix-js-sdk/src/models/room\";\nimport { IHierarchyRoom } from \"matrix-js-sdk/src/@types/spaces\";\n\nimport { _t } from \"../../languageHandler\";\n\n// The consts & types are moved out here to prevent cyclical imports\n\nexport const UPDATE_TOP_LEVEL_SPACES = Symbol(\"top-level-spaces\");\nexport const UPDATE_INVITED_SPACES = Symbol(\"invited-spaces\");\nexport const UPDATE_SELECTED_SPACE = Symbol(\"selected-space\");\nexport const UPDATE_HOME_BEHAVIOUR = Symbol(\"home-behaviour\");\nexport const UPDATE_SUGGESTED_ROOMS = Symbol(\"suggested-rooms\");\n// Space Key will be emitted when a Space's children change\n\nexport enum MetaSpace {\n    Home = \"home-space\",\n    Favourites = \"favourites-space\",\n    People = \"people-space\",\n    Orphans = \"orphans-space\",\n}\n\nexport const getMetaSpaceName = (spaceKey: MetaSpace, allRoomsInHome = false): string => {\n    switch (spaceKey) {\n        case MetaSpace.Home:\n            return allRoomsInHome ? _t(\"All rooms\") : _t(\"Home\");\n        case MetaSpace.Favourites:\n            return _t(\"Favourites\");\n        case MetaSpace.People:\n            return _t(\"People\");\n        case MetaSpace.Orphans:\n            return _t(\"Other rooms\");\n    }\n};\n\nexport type SpaceKey = MetaSpace | Room[\"roomId\"];\n\nexport interface ISuggestedRoom extends IHierarchyRoom {\n    viaServers: string[];\n}\n\nexport function isMetaSpace(spaceKey: SpaceKey): boolean {\n    return spaceKey === MetaSpace.Home ||\n        spaceKey === MetaSpace.Favourites ||\n        spaceKey === MetaSpace.People ||\n        spaceKey === MetaSpace.Orphans;\n}\n"],"mappings":";;;;;;;;AAmBA;;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAEO,MAAMA,uBAAuB,GAAGC,MAAM,CAAC,kBAAD,CAAtC;;AACA,MAAMC,qBAAqB,GAAGD,MAAM,CAAC,gBAAD,CAApC;;AACA,MAAME,qBAAqB,GAAGF,MAAM,CAAC,gBAAD,CAApC;;AACA,MAAMG,qBAAqB,GAAGH,MAAM,CAAC,gBAAD,CAApC;;AACA,MAAMI,sBAAsB,GAAGJ,MAAM,CAAC,iBAAD,CAArC,C,CACP;;;IAEYK,S;;;WAAAA,S;EAAAA,S;EAAAA,S;EAAAA,S;EAAAA,S;GAAAA,S,yBAAAA,S;;AAOL,MAAMC,gBAAgB,GAAG,UAACC,QAAD,EAAyD;EAAA,IAAnCC,cAAmC,uEAAlB,KAAkB;;EACrF,QAAQD,QAAR;IACI,KAAKF,SAAS,CAACI,IAAf;MACI,OAAOD,cAAc,GAAG,IAAAE,mBAAA,EAAG,WAAH,CAAH,GAAqB,IAAAA,mBAAA,EAAG,MAAH,CAA1C;;IACJ,KAAKL,SAAS,CAACM,UAAf;MACI,OAAO,IAAAD,mBAAA,EAAG,YAAH,CAAP;;IACJ,KAAKL,SAAS,CAACO,MAAf;MACI,OAAO,IAAAF,mBAAA,EAAG,QAAH,CAAP;;IACJ,KAAKL,SAAS,CAACQ,OAAf;MACI,OAAO,IAAAH,mBAAA,EAAG,aAAH,CAAP;EARR;AAUH,CAXM;;;;AAmBA,SAASI,WAAT,CAAqBP,QAArB,EAAkD;EACrD,OAAOA,QAAQ,KAAKF,SAAS,CAACI,IAAvB,IACHF,QAAQ,KAAKF,SAAS,CAACM,UADpB,IAEHJ,QAAQ,KAAKF,SAAS,CAACO,MAFpB,IAGHL,QAAQ,KAAKF,SAAS,CAACQ,OAH3B;AAIH"}