{"version":3,"file":"WidgetMessagingStore.js","names":["WidgetMessagingStoreEvent","WidgetMessagingStore","AsyncStoreWithClient","constructor","defaultDispatcher","EnhancedMap","Set","instance","internalInstance","onAction","payload","onReady","widgetMap","clear","storeMessaging","widget","roomId","widgetApi","stopMessaging","uid","WidgetUtils","calcWidgetUid","id","set","once","ElementWidgetActions","WidgetReady","ev","readyWidgets","add","emit","transport","reply","detail","StoreMessaging","stopMessagingByUid","getMessaging","get","widgetUid","remove","stop","delete","StopMessaging","getMessagingForUid","isWidgetReady","has"],"sources":["../../../src/stores/widgets/WidgetMessagingStore.ts"],"sourcesContent":["/*\n * Copyright 2020 The Matrix.org Foundation C.I.C.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ClientWidgetApi, Widget, IWidgetApiRequest } from \"matrix-widget-api\";\n\nimport { ElementWidgetActions } from \"./ElementWidgetActions\";\nimport { AsyncStoreWithClient } from \"../AsyncStoreWithClient\";\nimport defaultDispatcher from \"../../dispatcher/dispatcher\";\nimport { ActionPayload } from \"../../dispatcher/payloads\";\nimport { EnhancedMap } from \"../../utils/maps\";\nimport WidgetUtils from \"../../utils/WidgetUtils\";\n\nexport enum WidgetMessagingStoreEvent {\n    StoreMessaging = \"store_messaging\",\n    StopMessaging = \"stop_messaging\",\n    WidgetReady = \"widget_ready\",\n}\n\n/**\n * Temporary holding store for widget messaging instances. This is eventually\n * going to be merged with a more complete WidgetStore, but for now it's\n * easiest to split this into a single place.\n */\nexport class WidgetMessagingStore extends AsyncStoreWithClient<unknown> {\n    private static internalInstance = new WidgetMessagingStore();\n\n    private widgetMap = new EnhancedMap<string, ClientWidgetApi>(); // <widget UID, ClientWidgetAPi>\n    private readyWidgets = new Set<string>(); // widgets that have sent a WidgetReady event\n\n    public constructor() {\n        super(defaultDispatcher);\n    }\n\n    public static get instance(): WidgetMessagingStore {\n        return WidgetMessagingStore.internalInstance;\n    }\n\n    protected async onAction(payload: ActionPayload): Promise<void> {\n        // nothing to do\n    }\n\n    protected async onReady(): Promise<any> {\n        // just in case\n        this.widgetMap.clear();\n    }\n\n    public storeMessaging(widget: Widget, roomId: string, widgetApi: ClientWidgetApi) {\n        this.stopMessaging(widget, roomId);\n        const uid = WidgetUtils.calcWidgetUid(widget.id, roomId);\n        this.widgetMap.set(uid, widgetApi);\n\n        widgetApi.once(`action:${ElementWidgetActions.WidgetReady}`, (ev: CustomEvent<IWidgetApiRequest>) => {\n            this.readyWidgets.add(uid);\n            this.emit(WidgetMessagingStoreEvent.WidgetReady, uid);\n            widgetApi.transport.reply(ev.detail, {}); // ack\n        });\n\n        this.emit(WidgetMessagingStoreEvent.StoreMessaging, uid, widgetApi);\n    }\n\n    public stopMessaging(widget: Widget, roomId: string) {\n        this.stopMessagingByUid(WidgetUtils.calcWidgetUid(widget.id, roomId));\n    }\n\n    public getMessaging(widget: Widget, roomId: string): ClientWidgetApi {\n        return this.widgetMap.get(WidgetUtils.calcWidgetUid(widget.id, roomId));\n    }\n\n    /**\n     * Stops the widget messaging instance for a given widget UID.\n     * @param {string} widgetUid The widget UID.\n     */\n    public stopMessagingByUid(widgetUid: string) {\n        this.widgetMap.remove(widgetUid)?.stop();\n        this.readyWidgets.delete(widgetUid);\n        this.emit(WidgetMessagingStoreEvent.StopMessaging, widgetUid);\n    }\n\n    /**\n     * Gets the widget messaging class for a given widget UID.\n     * @param {string} widgetUid The widget UID.\n     * @returns {ClientWidgetApi} The widget API, or a falsy value if not found.\n     */\n    public getMessagingForUid(widgetUid: string): ClientWidgetApi {\n        return this.widgetMap.get(widgetUid);\n    }\n\n    /**\n     * @param {string} widgetUid The widget UID.\n     * @returns {boolean} Whether the widget has issued an ElementWidgetActions.WidgetReady event.\n     */\n    public isWidgetReady(widgetUid: string): boolean {\n        return this.readyWidgets.has(widgetUid);\n    }\n}\n"],"mappings":";;;;;;;;;;;AAkBA;;AACA;;AACA;;AAEA;;AACA;;AAvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAWYA,yB;AAMZ;AACA;AACA;AACA;AACA;;;;WAVYA,yB;EAAAA,yB;EAAAA,yB;EAAAA,yB;GAAAA,yB,yCAAAA,yB;;AAWL,MAAMC,oBAAN,SAAmCC,0CAAnC,CAAiE;EAGJ;EACtB;EAEnCC,WAAW,GAAG;IACjB,MAAMC,mBAAN;IADiB,iDAHD,IAAIC,iBAAJ,EAGC;IAAA,oDAFE,IAAIC,GAAJ,EAEF;EAEpB;;EAEyB,WAARC,QAAQ,GAAyB;IAC/C,OAAON,oBAAoB,CAACO,gBAA5B;EACH;;EAEuB,MAARC,QAAQ,CAACC,OAAD,EAAwC,CAC5D;EACH;;EAEsB,MAAPC,OAAO,GAAiB;IACpC;IACA,KAAKC,SAAL,CAAeC,KAAf;EACH;;EAEMC,cAAc,CAACC,MAAD,EAAiBC,MAAjB,EAAiCC,SAAjC,EAA6D;IAC9E,KAAKC,aAAL,CAAmBH,MAAnB,EAA2BC,MAA3B;;IACA,MAAMG,GAAG,GAAGC,oBAAA,CAAYC,aAAZ,CAA0BN,MAAM,CAACO,EAAjC,EAAqCN,MAArC,CAAZ;;IACA,KAAKJ,SAAL,CAAeW,GAAf,CAAmBJ,GAAnB,EAAwBF,SAAxB;IAEAA,SAAS,CAACO,IAAV,CAAgB,UAASC,0CAAA,CAAqBC,WAAY,EAA1D,EAA8DC,EAAD,IAAwC;MACjG,KAAKC,YAAL,CAAkBC,GAAlB,CAAsBV,GAAtB;MACA,KAAKW,IAAL,CAAU9B,yBAAyB,CAAC0B,WAApC,EAAiDP,GAAjD;MACAF,SAAS,CAACc,SAAV,CAAoBC,KAApB,CAA0BL,EAAE,CAACM,MAA7B,EAAqC,EAArC,EAHiG,CAGvD;IAC7C,CAJD;IAMA,KAAKH,IAAL,CAAU9B,yBAAyB,CAACkC,cAApC,EAAoDf,GAApD,EAAyDF,SAAzD;EACH;;EAEMC,aAAa,CAACH,MAAD,EAAiBC,MAAjB,EAAiC;IACjD,KAAKmB,kBAAL,CAAwBf,oBAAA,CAAYC,aAAZ,CAA0BN,MAAM,CAACO,EAAjC,EAAqCN,MAArC,CAAxB;EACH;;EAEMoB,YAAY,CAACrB,MAAD,EAAiBC,MAAjB,EAAkD;IACjE,OAAO,KAAKJ,SAAL,CAAeyB,GAAf,CAAmBjB,oBAAA,CAAYC,aAAZ,CAA0BN,MAAM,CAACO,EAAjC,EAAqCN,MAArC,CAAnB,CAAP;EACH;EAED;AACJ;AACA;AACA;;;EACWmB,kBAAkB,CAACG,SAAD,EAAoB;IACzC,KAAK1B,SAAL,CAAe2B,MAAf,CAAsBD,SAAtB,GAAkCE,IAAlC;IACA,KAAKZ,YAAL,CAAkBa,MAAlB,CAAyBH,SAAzB;IACA,KAAKR,IAAL,CAAU9B,yBAAyB,CAAC0C,aAApC,EAAmDJ,SAAnD;EACH;EAED;AACJ;AACA;AACA;AACA;;;EACWK,kBAAkB,CAACL,SAAD,EAAqC;IAC1D,OAAO,KAAK1B,SAAL,CAAeyB,GAAf,CAAmBC,SAAnB,CAAP;EACH;EAED;AACJ;AACA;AACA;;;EACWM,aAAa,CAACN,SAAD,EAA6B;IAC7C,OAAO,KAAKV,YAAL,CAAkBiB,GAAlB,CAAsBP,SAAtB,CAAP;EACH;;AAtEmE;;;8BAA3DrC,oB,sBACyB,IAAIA,oBAAJ,E"}