{"version":3,"file":"WidgetPermissionStore.js","names":["OIDCState","WidgetPermissionStore","constructor","instance","internalInstance","packSettingKey","widget","kind","roomId","location","WidgetKind","Room","MatrixClientPeg","get","getUserId","Modal","Error","encodeURIComponent","templateUrl","getOIDCState","settingsKey","settings","SettingsStore","getValue","deny","includes","Denied","allow","Allowed","Unknown","setOIDCState","newState","currentValues","push","filter","c","setValue","SettingLevel","DEVICE"],"sources":["../../../src/stores/widgets/WidgetPermissionStore.ts"],"sourcesContent":["/*\n * Copyright 2020 The Matrix.org Foundation C.I.C.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Widget, WidgetKind } from \"matrix-widget-api\";\n\nimport SettingsStore from \"../../settings/SettingsStore\";\nimport { MatrixClientPeg } from \"../../MatrixClientPeg\";\nimport { SettingLevel } from \"../../settings/SettingLevel\";\n\nexport enum OIDCState {\n    Allowed, // user has set the remembered value as allowed\n    Denied, // user has set the remembered value as disallowed\n    Unknown, // user has not set a remembered value\n}\n\nexport class WidgetPermissionStore {\n    private static internalInstance: WidgetPermissionStore;\n\n    private constructor() {\n    }\n\n    public static get instance(): WidgetPermissionStore {\n        if (!WidgetPermissionStore.internalInstance) {\n            WidgetPermissionStore.internalInstance = new WidgetPermissionStore();\n        }\n        return WidgetPermissionStore.internalInstance;\n    }\n\n    // TODO (all functions here): Merge widgetKind with the widget definition\n\n    private packSettingKey(widget: Widget, kind: WidgetKind, roomId?: string): string {\n        let location = roomId;\n        if (kind !== WidgetKind.Room) {\n            location = MatrixClientPeg.get().getUserId();\n        }\n        if (kind === WidgetKind.Modal) {\n            location = '*MODAL*-' + location; // to guarantee differentiation from whatever spawned it\n        }\n        if (!location) {\n            throw new Error(\"Failed to determine a location to check the widget's OIDC state with\");\n        }\n\n        return encodeURIComponent(`${location}::${widget.templateUrl}`);\n    }\n\n    public getOIDCState(widget: Widget, kind: WidgetKind, roomId?: string): OIDCState {\n        const settingsKey = this.packSettingKey(widget, kind, roomId);\n        const settings = SettingsStore.getValue(\"widgetOpenIDPermissions\");\n        if (settings?.deny?.includes(settingsKey)) {\n            return OIDCState.Denied;\n        }\n        if (settings?.allow?.includes(settingsKey)) {\n            return OIDCState.Allowed;\n        }\n        return OIDCState.Unknown;\n    }\n\n    public setOIDCState(widget: Widget, kind: WidgetKind, roomId: string, newState: OIDCState) {\n        const settingsKey = this.packSettingKey(widget, kind, roomId);\n\n        const currentValues = SettingsStore.getValue(\"widgetOpenIDPermissions\");\n        if (!currentValues.allow) currentValues.allow = [];\n        if (!currentValues.deny) currentValues.deny = [];\n\n        if (newState === OIDCState.Allowed) {\n            currentValues.allow.push(settingsKey);\n        } else if (newState === OIDCState.Denied) {\n            currentValues.deny.push(settingsKey);\n        } else {\n            currentValues.allow = currentValues.allow.filter(c => c !== settingsKey);\n            currentValues.deny = currentValues.deny.filter(c => c !== settingsKey);\n        }\n\n        SettingsStore.setValue(\"widgetOpenIDPermissions\", null, SettingLevel.DEVICE, currentValues);\n    }\n}\n"],"mappings":"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"}