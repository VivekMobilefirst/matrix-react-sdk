{"version":3,"file":"VisibilityProvider.js","names":["VisibilityProvider","constructor","instance","internalInstance","onNewInvitedRoom","room","VoipUserMapper","sharedInstance","isRoomVisible","CallHandler","getSupportsVirtualRooms","isVirtualRoom","isSpaceRoom","isLocalRoom","isVisibleFn","RoomListCustomisations"],"sources":["../../../../src/stores/room-list/filters/VisibilityProvider.ts"],"sourcesContent":["/*\n * Copyright 2020 The Matrix.org Foundation C.I.C.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Room } from \"matrix-js-sdk/src/models/room\";\n\nimport CallHandler from \"../../../CallHandler\";\nimport { RoomListCustomisations } from \"../../../customisations/RoomList\";\nimport { isLocalRoom } from \"../../../utils/localRoom/isLocalRoom\";\nimport VoipUserMapper from \"../../../VoipUserMapper\";\n\nexport class VisibilityProvider {\n    private static internalInstance: VisibilityProvider;\n\n    private constructor() {\n    }\n\n    public static get instance(): VisibilityProvider {\n        if (!VisibilityProvider.internalInstance) {\n            VisibilityProvider.internalInstance = new VisibilityProvider();\n        }\n        return VisibilityProvider.internalInstance;\n    }\n\n    public async onNewInvitedRoom(room: Room) {\n        await VoipUserMapper.sharedInstance().onNewInvitedRoom(room);\n    }\n\n    public isRoomVisible(room?: Room): boolean {\n        if (!room) {\n            return false;\n        }\n\n        if (\n            CallHandler.instance.getSupportsVirtualRooms() &&\n            VoipUserMapper.sharedInstance().isVirtualRoom(room)\n        ) {\n            return false;\n        }\n\n        // hide space rooms as they'll be shown in the SpacePanel\n        if (room.isSpaceRoom()) {\n            return false;\n        }\n\n        if (isLocalRoom(room)) {\n            // local rooms shouldn't show up anywhere\n            return false;\n        }\n\n        const isVisibleFn = RoomListCustomisations.isRoomVisible;\n        if (isVisibleFn) {\n            return isVisibleFn(room);\n        }\n\n        return true; // default\n    }\n}\n"],"mappings":";;;;;;;;;;;AAkBA;;AACA;;AACA;;AACA;;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASO,MAAMA,kBAAN,CAAyB;EAGpBC,WAAW,GAAG,CACrB;;EAEyB,WAARC,QAAQ,GAAuB;IAC7C,IAAI,CAACF,kBAAkB,CAACG,gBAAxB,EAA0C;MACtCH,kBAAkB,CAACG,gBAAnB,GAAsC,IAAIH,kBAAJ,EAAtC;IACH;;IACD,OAAOA,kBAAkB,CAACG,gBAA1B;EACH;;EAE4B,MAAhBC,gBAAgB,CAACC,IAAD,EAAa;IACtC,MAAMC,uBAAA,CAAeC,cAAf,GAAgCH,gBAAhC,CAAiDC,IAAjD,CAAN;EACH;;EAEMG,aAAa,CAACH,IAAD,EAAuB;IACvC,IAAI,CAACA,IAAL,EAAW;MACP,OAAO,KAAP;IACH;;IAED,IACII,oBAAA,CAAYP,QAAZ,CAAqBQ,uBAArB,MACAJ,uBAAA,CAAeC,cAAf,GAAgCI,aAAhC,CAA8CN,IAA9C,CAFJ,EAGE;MACE,OAAO,KAAP;IACH,CAVsC,CAYvC;;;IACA,IAAIA,IAAI,CAACO,WAAL,EAAJ,EAAwB;MACpB,OAAO,KAAP;IACH;;IAED,IAAI,IAAAC,wBAAA,EAAYR,IAAZ,CAAJ,EAAuB;MACnB;MACA,OAAO,KAAP;IACH;;IAED,MAAMS,WAAW,GAAGC,gCAAA,CAAuBP,aAA3C;;IACA,IAAIM,WAAJ,EAAiB;MACb,OAAOA,WAAW,CAACT,IAAD,CAAlB;IACH;;IAED,OAAO,IAAP,CA3BuC,CA2B1B;EAChB;;AA7C2B;;;8BAAnBL,kB"}