{"version":3,"file":"IFilterCondition.js","names":["FILTER_CHANGED"],"sources":["../../../../src/stores/room-list/filters/IFilterCondition.ts"],"sourcesContent":["/*\nCopyright 2020, 2021 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { Room } from \"matrix-js-sdk/src/models/room\";\nimport { EventEmitter } from \"events\";\n\nexport const FILTER_CHANGED = \"filter_changed\";\n\n/**\n * A filter condition for the room list, determining if a room\n * should be shown or not.\n *\n * All filter conditions are expected to be stable executions,\n * meaning that given the same input the same answer will be\n * returned (thus allowing caching). As such, filter conditions\n * can, but shouldn't, do heavier logic and not worry about being\n * called constantly by the room list. When the condition changes\n * such that different inputs lead to different answers (such\n * as a change in the user's input), this emits FILTER_CHANGED.\n */\nexport interface IFilterCondition extends EventEmitter {\n    /**\n     * Determines if a given room should be visible under this\n     * condition.\n     * @param room The room to check.\n     * @returns True if the room should be visible.\n     */\n    isVisible(room: Room): boolean;\n}\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKO,MAAMA,cAAc,GAAG,gBAAvB;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}