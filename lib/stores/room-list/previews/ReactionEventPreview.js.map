{"version":3,"file":"ReactionEventPreview.js","names":["ReactionEventPreview","getTextFor","event","tagId","isThread","showDms","SettingsStore","getValue","showAll","DMRoomMap","shared","getUserIdForRoomId","getRoomId","relation","getRelation","reaction","key","isSelf","shouldPrefixMessagesIn","_t","senderName","getSenderName"],"sources":["../../../../src/stores/room-list/previews/ReactionEventPreview.ts"],"sourcesContent":["/*\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { MatrixEvent } from \"matrix-js-sdk/src/models/event\";\n\nimport { IPreview } from \"./IPreview\";\nimport { TagID } from \"../models\";\nimport { getSenderName, isSelf, shouldPrefixMessagesIn } from \"./utils\";\nimport { _t } from \"../../../languageHandler\";\nimport SettingsStore from \"../../../settings/SettingsStore\";\nimport DMRoomMap from \"../../../utils/DMRoomMap\";\n\nexport class ReactionEventPreview implements IPreview {\n    public getTextFor(event: MatrixEvent, tagId?: TagID, isThread?: boolean): string {\n        const showDms = SettingsStore.getValue(\"feature_roomlist_preview_reactions_dms\");\n        const showAll = SettingsStore.getValue(\"feature_roomlist_preview_reactions_all\");\n\n        // If we're not showing all reactions, see if we're showing DMs instead\n        if (!showAll) {\n            // If we're not showing reactions on DMs, or we are and the room isn't a DM, skip\n            if (!(showDms && DMRoomMap.shared().getUserIdForRoomId(event.getRoomId()))) {\n                return null;\n            }\n        }\n\n        const relation = event.getRelation();\n        if (!relation) return null; // invalid reaction (probably redacted)\n\n        const reaction = relation.key;\n        if (!reaction) return null; // invalid reaction (unknown format)\n\n        if (isThread || isSelf(event) || !shouldPrefixMessagesIn(event.getRoomId(), tagId)) {\n            return reaction;\n        } else {\n            return _t(\"%(senderName)s: %(reaction)s\", { senderName: getSenderName(event), reaction });\n        }\n    }\n}\n"],"mappings":";;;;;;;;;AAoBA;;AACA;;AACA;;AACA;;AAvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWO,MAAMA,oBAAN,CAA+C;EAC3CC,UAAU,CAACC,KAAD,EAAqBC,KAArB,EAAoCC,QAApC,EAAgE;IAC7E,MAAMC,OAAO,GAAGC,sBAAA,CAAcC,QAAd,CAAuB,wCAAvB,CAAhB;;IACA,MAAMC,OAAO,GAAGF,sBAAA,CAAcC,QAAd,CAAuB,wCAAvB,CAAhB,CAF6E,CAI7E;;;IACA,IAAI,CAACC,OAAL,EAAc;MACV;MACA,IAAI,EAAEH,OAAO,IAAII,kBAAA,CAAUC,MAAV,GAAmBC,kBAAnB,CAAsCT,KAAK,CAACU,SAAN,EAAtC,CAAb,CAAJ,EAA4E;QACxE,OAAO,IAAP;MACH;IACJ;;IAED,MAAMC,QAAQ,GAAGX,KAAK,CAACY,WAAN,EAAjB;IACA,IAAI,CAACD,QAAL,EAAe,OAAO,IAAP,CAb8D,CAajD;;IAE5B,MAAME,QAAQ,GAAGF,QAAQ,CAACG,GAA1B;IACA,IAAI,CAACD,QAAL,EAAe,OAAO,IAAP,CAhB8D,CAgBjD;;IAE5B,IAAIX,QAAQ,IAAI,IAAAa,aAAA,EAAOf,KAAP,CAAZ,IAA6B,CAAC,IAAAgB,6BAAA,EAAuBhB,KAAK,CAACU,SAAN,EAAvB,EAA0CT,KAA1C,CAAlC,EAAoF;MAChF,OAAOY,QAAP;IACH,CAFD,MAEO;MACH,OAAO,IAAAI,mBAAA,EAAG,8BAAH,EAAmC;QAAEC,UAAU,EAAE,IAAAC,oBAAA,EAAcnB,KAAd,CAAd;QAAoCa;MAApC,CAAnC,CAAP;IACH;EACJ;;AAxBiD"}