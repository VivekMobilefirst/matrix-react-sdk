{"version":3,"file":"RoomListLayoutStore.js","names":["RoomListLayoutStore","AsyncStoreWithClient","constructor","defaultDispatcher","Map","instance","internalInstance","ensureLayoutExists","tagId","layoutMap","has","set","ListLayout","getLayoutFor","get","resetLayouts","logger","warn","layout","values","reset","onNotReady","clear","onAction","payload","window","mxRoomListLayoutStore"],"sources":["../../../src/stores/room-list/RoomListLayoutStore.ts"],"sourcesContent":["/*\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nimport { TagID } from \"./models\";\nimport { ListLayout } from \"./ListLayout\";\nimport { AsyncStoreWithClient } from \"../AsyncStoreWithClient\";\nimport defaultDispatcher from \"../../dispatcher/dispatcher\";\nimport { ActionPayload } from \"../../dispatcher/payloads\";\n\ninterface IState {}\n\nexport default class RoomListLayoutStore extends AsyncStoreWithClient<IState> {\n    private static internalInstance: RoomListLayoutStore;\n\n    private readonly layoutMap = new Map<TagID, ListLayout>();\n\n    constructor() {\n        super(defaultDispatcher);\n    }\n\n    public static get instance(): RoomListLayoutStore {\n        if (!RoomListLayoutStore.internalInstance) {\n            RoomListLayoutStore.internalInstance = new RoomListLayoutStore();\n        }\n        return RoomListLayoutStore.internalInstance;\n    }\n\n    public ensureLayoutExists(tagId: TagID) {\n        if (!this.layoutMap.has(tagId)) {\n            this.layoutMap.set(tagId, new ListLayout(tagId));\n        }\n    }\n\n    public getLayoutFor(tagId: TagID): ListLayout {\n        if (!this.layoutMap.has(tagId)) {\n            this.layoutMap.set(tagId, new ListLayout(tagId));\n        }\n        return this.layoutMap.get(tagId);\n    }\n\n    // Note: this primarily exists for debugging, and isn't really intended to be used by anything.\n    public async resetLayouts() {\n        logger.warn(\"Resetting layouts for room list\");\n        for (const layout of this.layoutMap.values()) {\n            layout.reset();\n        }\n    }\n\n    protected async onNotReady(): Promise<any> {\n        // On logout, clear the map.\n        this.layoutMap.clear();\n    }\n\n    // We don't need this function, but our contract says we do\n    protected async onAction(payload: ActionPayload): Promise<void> {\n    }\n}\n\nwindow.mxRoomListLayoutStore = RoomListLayoutStore.instance;\n"],"mappings":";;;;;;;;;;;AAgBA;;AAGA;;AACA;;AACA;;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYe,MAAMA,mBAAN,SAAkCC,0CAAlC,CAA+D;EAK1EC,WAAW,GAAG;IACV,MAAMC,mBAAN;IADU,iDAFe,IAAIC,GAAJ,EAEf;EAEb;;EAEyB,WAARC,QAAQ,GAAwB;IAC9C,IAAI,CAACL,mBAAmB,CAACM,gBAAzB,EAA2C;MACvCN,mBAAmB,CAACM,gBAApB,GAAuC,IAAIN,mBAAJ,EAAvC;IACH;;IACD,OAAOA,mBAAmB,CAACM,gBAA3B;EACH;;EAEMC,kBAAkB,CAACC,KAAD,EAAe;IACpC,IAAI,CAAC,KAAKC,SAAL,CAAeC,GAAf,CAAmBF,KAAnB,CAAL,EAAgC;MAC5B,KAAKC,SAAL,CAAeE,GAAf,CAAmBH,KAAnB,EAA0B,IAAII,sBAAJ,CAAeJ,KAAf,CAA1B;IACH;EACJ;;EAEMK,YAAY,CAACL,KAAD,EAA2B;IAC1C,IAAI,CAAC,KAAKC,SAAL,CAAeC,GAAf,CAAmBF,KAAnB,CAAL,EAAgC;MAC5B,KAAKC,SAAL,CAAeE,GAAf,CAAmBH,KAAnB,EAA0B,IAAII,sBAAJ,CAAeJ,KAAf,CAA1B;IACH;;IACD,OAAO,KAAKC,SAAL,CAAeK,GAAf,CAAmBN,KAAnB,CAAP;EACH,CA3ByE,CA6B1E;;;EACyB,MAAZO,YAAY,GAAG;IACxBC,cAAA,CAAOC,IAAP,CAAY,iCAAZ;;IACA,KAAK,MAAMC,MAAX,IAAqB,KAAKT,SAAL,CAAeU,MAAf,EAArB,EAA8C;MAC1CD,MAAM,CAACE,KAAP;IACH;EACJ;;EAEyB,MAAVC,UAAU,GAAiB;IACvC;IACA,KAAKZ,SAAL,CAAea,KAAf;EACH,CAxCyE,CA0C1E;;;EACwB,MAARC,QAAQ,CAACC,OAAD,EAAwC,CAC/D;;AA5CyE;;;8BAAzDxB,mB;AA+CrByB,MAAM,CAACC,qBAAP,GAA+B1B,mBAAmB,CAACK,QAAnD"}