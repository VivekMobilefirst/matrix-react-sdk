{"version":3,"file":"AsyncStoreWithClient.js","names":["AsyncStoreWithClient","AsyncStore","constructor","dispatcher","initialState","asyncStore","readyStore","ReadyWatchingStore","mxClient","matrixClient","onReady","onNotReady","onDispatch","payload","onAction"],"sources":["../../src/stores/AsyncStoreWithClient.ts"],"sourcesContent":["/*\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { MatrixClient } from \"matrix-js-sdk/src/client\";\nimport { Dispatcher } from \"flux\";\n\nimport { AsyncStore } from \"./AsyncStore\";\nimport { ActionPayload } from \"../dispatcher/payloads\";\nimport { ReadyWatchingStore } from \"./ReadyWatchingStore\";\n\nexport abstract class AsyncStoreWithClient<T extends Object> extends AsyncStore<T> {\n    protected readyStore: ReadyWatchingStore;\n\n    protected constructor(dispatcher: Dispatcher<ActionPayload>, initialState: T = <T>{}) {\n        super(dispatcher, initialState);\n\n        // Create an anonymous class to avoid code duplication\n        const asyncStore = this; // eslint-disable-line @typescript-eslint/no-this-alias\n        this.readyStore = new (class extends ReadyWatchingStore {\n            public get mxClient(): MatrixClient {\n                return this.matrixClient;\n            }\n\n            protected async onReady(): Promise<any> {\n                return asyncStore.onReady();\n            }\n\n            protected async onNotReady(): Promise<any> {\n                return asyncStore.onNotReady();\n            }\n        })(dispatcher);\n    }\n\n    get matrixClient(): MatrixClient {\n        return this.readyStore.mxClient;\n    }\n\n    protected async onReady() {\n        // Default implementation is to do nothing.\n    }\n\n    protected async onNotReady() {\n        // Default implementation is to do nothing.\n    }\n\n    protected abstract onAction(payload: ActionPayload): Promise<void>;\n\n    protected async onDispatch(payload: ActionPayload) {\n        await this.onAction(payload);\n    }\n}\n"],"mappings":";;;;;;;;;;;AAmBA;;AAEA;;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASO,MAAeA,oBAAf,SAA8DC,sBAA9D,CAA4E;EAGrEC,WAAW,CAACC,UAAD,EAAiE;IAAA,IAAzBC,YAAyB,uEAAJ,EAAI;IAClF,MAAMD,UAAN,EAAkBC,YAAlB,EADkF,CAGlF;;IAHkF;IAIlF,MAAMC,UAAU,GAAG,IAAnB,CAJkF,CAIzD;;IACzB,KAAKC,UAAL,GAAkB,IAAK,cAAcC,sCAAd,CAAiC;MACjC,IAARC,QAAQ,GAAiB;QAChC,OAAO,KAAKC,YAAZ;MACH;;MAEsB,MAAPC,OAAO,GAAiB;QACpC,OAAOL,UAAU,CAACK,OAAX,EAAP;MACH;;MAEyB,MAAVC,UAAU,GAAiB;QACvC,OAAON,UAAU,CAACM,UAAX,EAAP;MACH;;IAXmD,CAAtC,CAYfR,UAZe,CAAlB;EAaH;;EAEe,IAAZM,YAAY,GAAiB;IAC7B,OAAO,KAAKH,UAAL,CAAgBE,QAAvB;EACH;;EAEsB,MAAPE,OAAO,GAAG,CACtB;EACH;;EAEyB,MAAVC,UAAU,GAAG,CACzB;EACH;;EAIyB,MAAVC,UAAU,CAACC,OAAD,EAAyB;IAC/C,MAAM,KAAKC,QAAL,CAAcD,OAAd,CAAN;EACH;;AAvC8E"}