{"version":3,"file":"ReadyWatchingStore.js","names":["ReadyWatchingStore","EventEmitter","constructor","dispatcher","payload","onDispatcherAction","action","prevState","SyncState","Prepared","state","matrixClient","onNotReady","onReady","Action","OnLoggedOut","dispatcherRef","register","onAction","MatrixClientPeg","get","mxClient","useUnitTestClient","cli","destroy","unregister"],"sources":["../../src/stores/ReadyWatchingStore.ts"],"sourcesContent":["/*\n * Copyright 2021 - 2022 The Matrix.org Foundation C.I.C.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatrixClient } from \"matrix-js-sdk/src/client\";\nimport { SyncState } from \"matrix-js-sdk/src/sync\";\nimport { Dispatcher } from \"flux\";\nimport { EventEmitter } from \"events\";\n\nimport { MatrixClientPeg } from \"../MatrixClientPeg\";\nimport { ActionPayload } from \"../dispatcher/payloads\";\nimport { IDestroyable } from \"../utils/IDestroyable\";\nimport { Action } from \"../dispatcher/actions\";\n\nexport abstract class ReadyWatchingStore extends EventEmitter implements IDestroyable {\n    protected matrixClient: MatrixClient;\n    private readonly dispatcherRef: string;\n\n    constructor(protected readonly dispatcher: Dispatcher<ActionPayload>) {\n        super();\n\n        this.dispatcherRef = this.dispatcher.register(this.onAction);\n\n        if (MatrixClientPeg.get()) {\n            this.matrixClient = MatrixClientPeg.get();\n\n            // noinspection JSIgnoredPromiseFromCall\n            this.onReady();\n        }\n    }\n\n    public get mxClient(): MatrixClient {\n        return this.matrixClient; // for external readonly access\n    }\n\n    public useUnitTestClient(cli: MatrixClient) {\n        this.matrixClient = cli;\n    }\n\n    public destroy() {\n        this.dispatcher.unregister(this.dispatcherRef);\n    }\n\n    protected async onReady() {\n        // Default implementation is to do nothing.\n    }\n\n    protected async onNotReady() {\n        // Default implementation is to do nothing.\n    }\n\n    protected onDispatcherAction(payload: ActionPayload) {\n        // Default implementation is to do nothing.\n    }\n\n    private onAction = async (payload: ActionPayload) => {\n        this.onDispatcherAction(payload);\n\n        if (payload.action === 'MatrixActions.sync') {\n            // Only set the client on the transition into the PREPARED state.\n            // Everything after this is unnecessary (we only need to know once we have a client)\n            // and we intentionally don't set the client before this point to avoid stores\n            // updating for every event emitted during the cached sync.\n            if (\n                payload.prevState !== SyncState.Prepared\n                && payload.state === SyncState.Prepared\n                && this.matrixClient !== payload.matrixClient\n            ) {\n                if (this.matrixClient) {\n                    await this.onNotReady();\n                }\n                this.matrixClient = payload.matrixClient;\n                await this.onReady();\n            }\n        } else if (payload.action === 'on_client_not_viable' || payload.action === Action.OnLoggedOut) {\n            if (this.matrixClient) {\n                await this.onNotReady();\n                this.matrixClient = null;\n            }\n        }\n    };\n}\n"],"mappings":";;;;;;;;;;;AAiBA;;AAEA;;AAEA;;AAGA;;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYO,MAAeA,kBAAf,SAA0CC,oBAA1C,CAA+E;EAIlFC,WAAW,CAAoBC,UAApB,EAA2D;IAClE;IADkE,KAAvCA,UAAuC,GAAvCA,UAAuC;IAAA;IAAA;IAAA,gDAqCnD,MAAOC,OAAP,IAAkC;MACjD,KAAKC,kBAAL,CAAwBD,OAAxB;;MAEA,IAAIA,OAAO,CAACE,MAAR,KAAmB,oBAAvB,EAA6C;QACzC;QACA;QACA;QACA;QACA,IACIF,OAAO,CAACG,SAAR,KAAsBC,eAAA,CAAUC,QAAhC,IACGL,OAAO,CAACM,KAAR,KAAkBF,eAAA,CAAUC,QAD/B,IAEG,KAAKE,YAAL,KAAsBP,OAAO,CAACO,YAHrC,EAIE;UACE,IAAI,KAAKA,YAAT,EAAuB;YACnB,MAAM,KAAKC,UAAL,EAAN;UACH;;UACD,KAAKD,YAAL,GAAoBP,OAAO,CAACO,YAA5B;UACA,MAAM,KAAKE,OAAL,EAAN;QACH;MACJ,CAhBD,MAgBO,IAAIT,OAAO,CAACE,MAAR,KAAmB,sBAAnB,IAA6CF,OAAO,CAACE,MAAR,KAAmBQ,eAAA,CAAOC,WAA3E,EAAwF;QAC3F,IAAI,KAAKJ,YAAT,EAAuB;UACnB,MAAM,KAAKC,UAAL,EAAN;UACA,KAAKD,YAAL,GAAoB,IAApB;QACH;MACJ;IACJ,CA9DqE;IAGlE,KAAKK,aAAL,GAAqB,KAAKb,UAAL,CAAgBc,QAAhB,CAAyB,KAAKC,QAA9B,CAArB;;IAEA,IAAIC,gCAAA,CAAgBC,GAAhB,EAAJ,EAA2B;MACvB,KAAKT,YAAL,GAAoBQ,gCAAA,CAAgBC,GAAhB,EAApB,CADuB,CAGvB;;MACA,KAAKP,OAAL;IACH;EACJ;;EAEkB,IAARQ,QAAQ,GAAiB;IAChC,OAAO,KAAKV,YAAZ,CADgC,CACN;EAC7B;;EAEMW,iBAAiB,CAACC,GAAD,EAAoB;IACxC,KAAKZ,YAAL,GAAoBY,GAApB;EACH;;EAEMC,OAAO,GAAG;IACb,KAAKrB,UAAL,CAAgBsB,UAAhB,CAA2B,KAAKT,aAAhC;EACH;;EAEsB,MAAPH,OAAO,GAAG,CACtB;EACH;;EAEyB,MAAVD,UAAU,GAAG,CACzB;EACH;;EAESP,kBAAkB,CAACD,OAAD,EAAyB,CACjD;EACH;;AAvCiF"}