{"version":3,"file":"EchoStore.js","names":["roomContextKey","room","roomId","EchoStore","AsyncStoreWithClient","constructor","defaultDispatcher","Map","instance","_instance","contexts","Array","from","caches","values","map","e","context","getOrCreateChamberForRoom","has","get","RoomEchoContext","whenAnything","checkContexts","echo","RoomEchoChamber","setClient","matrixClient","set","hasOrHadError","state","ContextTransactionState","PendingErrors","toastRef","ref","NonUrgentToastStore","addToast","NonUrgentEchoFailureToast","updateState","removeToast","onReady","onNotReady","onAction","payload"],"sources":["../../../src/stores/local-echo/EchoStore.ts"],"sourcesContent":["/*\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { Room } from \"matrix-js-sdk/src/models/room\";\n\nimport { GenericEchoChamber } from \"./GenericEchoChamber\";\nimport { RoomEchoChamber } from \"./RoomEchoChamber\";\nimport { RoomEchoContext } from \"./RoomEchoContext\";\nimport { AsyncStoreWithClient } from \"../AsyncStoreWithClient\";\nimport defaultDispatcher from \"../../dispatcher/dispatcher\";\nimport { ActionPayload } from \"../../dispatcher/payloads\";\nimport { ContextTransactionState, EchoContext } from \"./EchoContext\";\nimport NonUrgentToastStore, { ToastReference } from \"../NonUrgentToastStore\";\nimport NonUrgentEchoFailureToast from \"../../components/views/toasts/NonUrgentEchoFailureToast\";\n\ninterface IState {\n    toastRef: ToastReference;\n}\n\ntype ContextKey = string;\n\nconst roomContextKey = (room: Room): ContextKey => `room-${room.roomId}`;\n\nexport class EchoStore extends AsyncStoreWithClient<IState> {\n    private static _instance: EchoStore;\n\n    private caches = new Map<ContextKey, GenericEchoChamber<any, any, any>>();\n\n    constructor() {\n        super(defaultDispatcher);\n    }\n\n    public static get instance(): EchoStore {\n        if (!EchoStore._instance) {\n            EchoStore._instance = new EchoStore();\n        }\n        return EchoStore._instance;\n    }\n\n    public get contexts(): EchoContext[] {\n        return Array.from(this.caches.values()).map(e => e.context);\n    }\n\n    public getOrCreateChamberForRoom(room: Room): RoomEchoChamber {\n        if (this.caches.has(roomContextKey(room))) {\n            return this.caches.get(roomContextKey(room)) as RoomEchoChamber;\n        }\n\n        const context = new RoomEchoContext(room);\n        context.whenAnything(() => this.checkContexts());\n\n        const echo = new RoomEchoChamber(context);\n        echo.setClient(this.matrixClient);\n        this.caches.set(roomContextKey(room), echo);\n\n        return echo;\n    }\n\n    private async checkContexts() {\n        let hasOrHadError = false;\n        for (const echo of this.caches.values()) {\n            hasOrHadError = echo.context.state === ContextTransactionState.PendingErrors;\n            if (hasOrHadError) break;\n        }\n\n        if (hasOrHadError && !this.state.toastRef) {\n            const ref = NonUrgentToastStore.instance.addToast(NonUrgentEchoFailureToast);\n            await this.updateState({ toastRef: ref });\n        } else if (!hasOrHadError && this.state.toastRef) {\n            NonUrgentToastStore.instance.removeToast(this.state.toastRef);\n            await this.updateState({ toastRef: null });\n        }\n    }\n\n    protected async onReady(): Promise<any> {\n        if (!this.caches) return; // can only happen during initialization\n        for (const echo of this.caches.values()) {\n            echo.setClient(this.matrixClient);\n        }\n    }\n\n    protected async onNotReady(): Promise<any> {\n        for (const echo of this.caches.values()) {\n            echo.setClient(null);\n        }\n    }\n\n    protected async onAction(payload: ActionPayload): Promise<void> {\n    }\n}\n"],"mappings":"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"}