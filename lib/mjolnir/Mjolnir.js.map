{"version":3,"file":"Mjolnir.js","names":["Mjolnir","payload","logger","log","setup","event","MatrixClientPeg","get","_roomIds","includes","getRoomId","ALL_RULE_TYPES","getType","updateLists","roomIds","lists","_lists","start","mjolnirWatchRef","SettingsStore","watchSetting","onListsChanged","bind","dispatcherRef","dis","register","onAction","dispatch","action","Action","DoAfterSyncPrepared","deferred_action","getValue","on","RoomStateEvent","Events","onEvent","stop","unwatchSetting","unregister","removeListener","getOrCreatePersonalList","personalRoomId","resp","createRoom","name","_t","topic","preset","Preset","PrivateChat","setValue","SettingLevel","ACCOUNT","Error","list","find","b","roomId","BanList","getPersonalList","subscribeToList","push","unsubscribeFromList","filter","r","settingName","atLevel","newValue","listRoomIds","isServerBanned","serverName","rule","serverRules","isMatch","isUserBanned","userId","userRules","sharedInstance","instance"],"sources":["../../src/mjolnir/Mjolnir.ts"],"sourcesContent":["/*\nCopyright 2019 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { MatrixEvent } from \"matrix-js-sdk/src/models/event\";\nimport { Preset } from \"matrix-js-sdk/src/@types/partials\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\nimport { RoomStateEvent } from \"matrix-js-sdk/src/models/room-state\";\n\nimport { MatrixClientPeg } from \"../MatrixClientPeg\";\nimport { ALL_RULE_TYPES, BanList } from \"./BanList\";\nimport SettingsStore from \"../settings/SettingsStore\";\nimport { _t } from \"../languageHandler\";\nimport dis from \"../dispatcher/dispatcher\";\nimport { SettingLevel } from \"../settings/SettingLevel\";\nimport { ActionPayload } from \"../dispatcher/payloads\";\nimport { DoAfterSyncPreparedPayload } from \"../dispatcher/payloads/DoAfterSyncPreparedPayload\";\nimport { Action } from \"../dispatcher/actions\";\n\n// TODO: Move this and related files to the js-sdk or something once finalized.\n\nexport class Mjolnir {\n    private static instance: Mjolnir = null;\n\n    private _lists: BanList[] = []; // eslint-disable-line @typescript-eslint/naming-convention\n    private _roomIds: string[] = []; // eslint-disable-line @typescript-eslint/naming-convention\n    private mjolnirWatchRef: string = null;\n    private dispatcherRef: string = null;\n\n    get roomIds(): string[] {\n        return this._roomIds;\n    }\n\n    get lists(): BanList[] {\n        return this._lists;\n    }\n\n    start() {\n        this.mjolnirWatchRef = SettingsStore.watchSetting(\"mjolnirRooms\", null, this.onListsChanged.bind(this));\n\n        this.dispatcherRef = dis.register(this.onAction);\n        dis.dispatch<DoAfterSyncPreparedPayload<ActionPayload>>({\n            action: Action.DoAfterSyncPrepared,\n            deferred_action: { action: 'setup_mjolnir' },\n        });\n    }\n\n    private onAction = (payload: ActionPayload) => {\n        if (payload['action'] === 'setup_mjolnir') {\n            logger.log(\"Setting up Mjolnir: after sync\");\n            this.setup();\n        }\n    };\n\n    setup() {\n        if (!MatrixClientPeg.get()) return;\n        this.updateLists(SettingsStore.getValue(\"mjolnirRooms\"));\n        MatrixClientPeg.get().on(RoomStateEvent.Events, this.onEvent);\n    }\n\n    stop() {\n        if (this.mjolnirWatchRef) {\n            SettingsStore.unwatchSetting(this.mjolnirWatchRef);\n            this.mjolnirWatchRef = null;\n        }\n\n        if (this.dispatcherRef) {\n            dis.unregister(this.dispatcherRef);\n            this.dispatcherRef = null;\n        }\n\n        if (!MatrixClientPeg.get()) return;\n        MatrixClientPeg.get().removeListener(RoomStateEvent.Events, this.onEvent);\n    }\n\n    async getOrCreatePersonalList(): Promise<BanList> {\n        let personalRoomId = SettingsStore.getValue(\"mjolnirPersonalRoom\");\n        if (!personalRoomId) {\n            const resp = await MatrixClientPeg.get().createRoom({\n                name: _t(\"My Ban List\"),\n                topic: _t(\"This is your list of users/servers you have blocked - don't leave the room!\"),\n                preset: Preset.PrivateChat,\n            });\n            personalRoomId = resp['room_id'];\n            await SettingsStore.setValue(\n                \"mjolnirPersonalRoom\", null, SettingLevel.ACCOUNT, personalRoomId);\n            await SettingsStore.setValue(\n                \"mjolnirRooms\", null, SettingLevel.ACCOUNT, [personalRoomId, ...this._roomIds]);\n        }\n        if (!personalRoomId) {\n            throw new Error(\"Error finding a room ID to use\");\n        }\n\n        let list = this._lists.find(b => b.roomId === personalRoomId);\n        if (!list) list = new BanList(personalRoomId);\n        // we don't append the list to the tracked rooms because it should already be there.\n        // we're just trying to get the caller some utility access to the list\n\n        return list;\n    }\n\n    // get without creating the list\n    getPersonalList(): BanList {\n        const personalRoomId = SettingsStore.getValue(\"mjolnirPersonalRoom\");\n        if (!personalRoomId) return null;\n\n        let list = this._lists.find(b => b.roomId === personalRoomId);\n        if (!list) list = new BanList(personalRoomId);\n        // we don't append the list to the tracked rooms because it should already be there.\n        // we're just trying to get the caller some utility access to the list\n\n        return list;\n    }\n\n    async subscribeToList(roomId: string) {\n        const roomIds = [...this._roomIds, roomId];\n        await SettingsStore.setValue(\"mjolnirRooms\", null, SettingLevel.ACCOUNT, roomIds);\n        this._lists.push(new BanList(roomId));\n    }\n\n    async unsubscribeFromList(roomId: string) {\n        const roomIds = this._roomIds.filter(r => r !== roomId);\n        await SettingsStore.setValue(\"mjolnirRooms\", null, SettingLevel.ACCOUNT, roomIds);\n        this._lists = this._lists.filter(b => b.roomId !== roomId);\n    }\n\n    private onEvent = (event: MatrixEvent) => {\n        if (!MatrixClientPeg.get()) return;\n        if (!this._roomIds.includes(event.getRoomId())) return;\n        if (!ALL_RULE_TYPES.includes(event.getType())) return;\n\n        this.updateLists(this._roomIds);\n    };\n\n    private onListsChanged(settingName: string, roomId: string, atLevel: SettingLevel, newValue: string[]) {\n        // We know that ban lists are only recorded at one level so we don't need to re-eval them\n        this.updateLists(newValue);\n    }\n\n    private updateLists(listRoomIds: string[]) {\n        if (!MatrixClientPeg.get()) return;\n\n        logger.log(\"Updating Mjolnir ban lists to: \" + listRoomIds);\n        this._lists = [];\n        this._roomIds = listRoomIds || [];\n        if (!listRoomIds) return;\n\n        for (const roomId of listRoomIds) {\n            // Creating the list updates it\n            this._lists.push(new BanList(roomId));\n        }\n    }\n\n    isServerBanned(serverName: string): boolean {\n        for (const list of this._lists) {\n            for (const rule of list.serverRules) {\n                if (rule.isMatch(serverName)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    isUserBanned(userId: string): boolean {\n        for (const list of this._lists) {\n            for (const rule of list.userRules) {\n                if (rule.isMatch(userId)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    static sharedInstance(): Mjolnir {\n        if (!Mjolnir.instance) {\n            Mjolnir.instance = new Mjolnir();\n        }\n        return Mjolnir.instance;\n    }\n}\n\n"],"mappings":"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"}