{"version":3,"file":"maps.js","names":["mapDiff","a","b","aKeys","keys","bKeys","keyDiff","arrayDiff","possibleChanges","arrayIntersection","changes","filter","k","get","changed","added","removed","EnhancedMap","Map","constructor","entries","getOrCreate","key","def","has","set","remove","v","delete"],"sources":["../../src/utils/maps.ts"],"sourcesContent":["/*\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { arrayDiff, arrayIntersection } from \"./arrays\";\n\n/**\n * Determines the keys added, changed, and removed between two Maps.\n * For changes, simple triple equal comparisons are done, not in-depth tree checking.\n * @param a The first Map. Must be defined.\n * @param b The second Map. Must be defined.\n * @returns The difference between the keys of each Map.\n */\nexport function mapDiff<K, V>(a: Map<K, V>, b: Map<K, V>): { changed: K[], added: K[], removed: K[] } {\n    const aKeys = [...a.keys()];\n    const bKeys = [...b.keys()];\n    const keyDiff = arrayDiff(aKeys, bKeys);\n    const possibleChanges = arrayIntersection(aKeys, bKeys);\n    const changes = possibleChanges.filter(k => a.get(k) !== b.get(k));\n\n    return { changed: changes, added: keyDiff.added, removed: keyDiff.removed };\n}\n\n/**\n * A Map<K, V> with added utility.\n */\nexport class EnhancedMap<K, V> extends Map<K, V> {\n    public constructor(entries?: Iterable<[K, V]>) {\n        super(entries);\n    }\n\n    public getOrCreate(key: K, def: V): V {\n        if (this.has(key)) {\n            return this.get(key);\n        }\n        this.set(key, def);\n        return def;\n    }\n\n    public remove(key: K): V {\n        const v = this.get(key);\n        this.delete(key);\n        return v;\n    }\n}\n"],"mappings":";;;;;;;;AAgBA;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,OAAT,CAAuBC,CAAvB,EAAqCC,CAArC,EAA+F;EAClG,MAAMC,KAAK,GAAG,CAAC,GAAGF,CAAC,CAACG,IAAF,EAAJ,CAAd;EACA,MAAMC,KAAK,GAAG,CAAC,GAAGH,CAAC,CAACE,IAAF,EAAJ,CAAd;EACA,MAAME,OAAO,GAAG,IAAAC,iBAAA,EAAUJ,KAAV,EAAiBE,KAAjB,CAAhB;EACA,MAAMG,eAAe,GAAG,IAAAC,yBAAA,EAAkBN,KAAlB,EAAyBE,KAAzB,CAAxB;EACA,MAAMK,OAAO,GAAGF,eAAe,CAACG,MAAhB,CAAuBC,CAAC,IAAIX,CAAC,CAACY,GAAF,CAAMD,CAAN,MAAaV,CAAC,CAACW,GAAF,CAAMD,CAAN,CAAzC,CAAhB;EAEA,OAAO;IAAEE,OAAO,EAAEJ,OAAX;IAAoBK,KAAK,EAAET,OAAO,CAACS,KAAnC;IAA0CC,OAAO,EAAEV,OAAO,CAACU;EAA3D,CAAP;AACH;AAED;AACA;AACA;;;AACO,MAAMC,WAAN,SAAgCC,GAAhC,CAA0C;EACtCC,WAAW,CAACC,OAAD,EAA6B;IAC3C,MAAMA,OAAN;EACH;;EAEMC,WAAW,CAACC,GAAD,EAASC,GAAT,EAAoB;IAClC,IAAI,KAAKC,GAAL,CAASF,GAAT,CAAJ,EAAmB;MACf,OAAO,KAAKT,GAAL,CAASS,GAAT,CAAP;IACH;;IACD,KAAKG,GAAL,CAASH,GAAT,EAAcC,GAAd;IACA,OAAOA,GAAP;EACH;;EAEMG,MAAM,CAACJ,GAAD,EAAY;IACrB,MAAMK,CAAC,GAAG,KAAKd,GAAL,CAASS,GAAT,CAAV;IACA,KAAKM,MAAL,CAAYN,GAAZ;IACA,OAAOK,CAAP;EACH;;AAjB4C"}