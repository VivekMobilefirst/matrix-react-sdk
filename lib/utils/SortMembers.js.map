{"version":3,"file":"SortMembers.js","names":["compareMembers","activityScores","memberScores","a","b","aActivityScore","userId","score","aMemberScore","aScore","aNumRooms","numRooms","bActivityScore","bMemberScore","bScore","bNumRooms","compare","joinedRooms","cli","getRooms","filter","r","getMyMembership","DMRoomMap","shared","getUserIdForRoomId","roomId","Object","keys","tags","includes","buildActivityScores","now","Date","getTime","earliestAgeConsidered","maxMessagesConsidered","events","flatMap","room","takeRight","getLiveTimeline","getEvents","ev","getTs","senderEvents","groupBy","getSender","mapValues","lastEvent","maxBy","distanceFromNow","Math","abs","inverseTime","lastSpoke","max","buildMemberScores","maxConsideredMembers","consideredRooms","getJoinedMemberCount","memberPeerEntries","getJoinedMembers","map","member","roomSize","userMeta","roomMemberships","maximumPeers","length","totalPeers","sumBy","entry","minBy","pow"],"sources":["../../src/utils/SortMembers.ts"],"sourcesContent":["/*\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { groupBy, mapValues, maxBy, minBy, sumBy, takeRight } from \"lodash\";\nimport { MatrixClient, Room, RoomMember } from \"matrix-js-sdk/src/matrix\";\n\nimport { Member } from \"./direct-messages\";\nimport DMRoomMap from \"./DMRoomMap\";\nimport { compare } from \"./strings\";\n\nexport const compareMembers = (\n    activityScores: Record<string, IActivityScore>,\n    memberScores: Record<string, IMemberScore>,\n) => (a: Member | RoomMember, b: Member | RoomMember): number => {\n    const aActivityScore = activityScores[a.userId]?.score ?? 0;\n    const aMemberScore = memberScores[a.userId]?.score ?? 0;\n    const aScore = aActivityScore + aMemberScore;\n    const aNumRooms = memberScores[a.userId]?.numRooms ?? 0;\n\n    const bActivityScore = activityScores[b.userId]?.score ?? 0;\n    const bMemberScore = memberScores[b.userId]?.score ?? 0;\n    const bScore = bActivityScore + bMemberScore;\n    const bNumRooms = memberScores[b.userId]?.numRooms ?? 0;\n\n    if (aScore === bScore) {\n        if (aNumRooms === bNumRooms) {\n            return compare(a.userId, b.userId);\n        }\n\n        return bNumRooms - aNumRooms;\n    }\n    return bScore - aScore;\n};\n\nfunction joinedRooms(cli: MatrixClient): Room[] {\n    return cli.getRooms()\n        .filter(r => r.getMyMembership() === 'join')\n        // Skip low priority rooms and DMs\n        .filter(r => !DMRoomMap.shared().getUserIdForRoomId(r.roomId))\n        .filter(r => !Object.keys(r.tags).includes(\"m.lowpriority\"));\n}\n\ninterface IActivityScore {\n    lastSpoke: number;\n    score: number;\n}\n\n// Score people based on who have sent messages recently, as a way to improve the quality of suggestions.\n// We do this by checking every room to see who has sent a message in the last few hours, and giving them\n// a score which correlates to the freshness of their message. In theory, this results in suggestions\n// which are closer to \"continue this conversation\" rather than \"this person exists\".\nexport function buildActivityScores(cli: MatrixClient): { [key: string]: IActivityScore } {\n    const now = new Date().getTime();\n    const earliestAgeConsidered = now - (60 * 60 * 1000); // 1 hour ago\n    const maxMessagesConsidered = 50; // so we don't iterate over a huge amount of traffic\n    const events = joinedRooms(cli)\n        .flatMap(room => takeRight(room.getLiveTimeline().getEvents(), maxMessagesConsidered))\n        .filter(ev => ev.getTs() > earliestAgeConsidered);\n    const senderEvents = groupBy(events, ev => ev.getSender());\n    return mapValues(senderEvents, events => {\n        const lastEvent = maxBy(events, ev => ev.getTs());\n        const distanceFromNow = Math.abs(now - lastEvent.getTs()); // abs to account for slight future messages\n        const inverseTime = (now - earliestAgeConsidered) - distanceFromNow;\n        return {\n            lastSpoke: lastEvent.getTs(),\n            // Scores from being in a room give a 'good' score of about 1.0-1.5, so for our\n            // score we'll try and award at least 1.0 for making the list, with 4.0 being\n            // an approximate maximum for being selected.\n            score: Math.max(1, inverseTime / (15 * 60 * 1000)), // 15min segments to keep scores sane\n        };\n    });\n}\n\ninterface IMemberScore {\n    member: RoomMember;\n    score: number;\n    numRooms: number;\n}\n\nexport function buildMemberScores(cli: MatrixClient): { [key: string]: IMemberScore } {\n    const maxConsideredMembers = 200;\n    const consideredRooms = joinedRooms(cli).filter(room => room.getJoinedMemberCount() < maxConsideredMembers);\n    const memberPeerEntries = consideredRooms\n        .flatMap(room =>\n            room.getJoinedMembers().map(member =>\n                ({ member, roomSize: room.getJoinedMemberCount() })));\n    const userMeta = groupBy(memberPeerEntries, ({ member }) => member.userId);\n    return mapValues(userMeta, roomMemberships => {\n        const maximumPeers = maxConsideredMembers * roomMemberships.length;\n        const totalPeers = sumBy(roomMemberships, entry => entry.roomSize);\n        return {\n            member: minBy(roomMemberships, entry => entry.roomSize).member,\n            numRooms: roomMemberships.length,\n            score: Math.max(0, Math.pow(1 - (totalPeers / maximumPeers), 5)),\n        };\n    });\n}\n"],"mappings":"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"}