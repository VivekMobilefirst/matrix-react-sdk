{"version":3,"file":"Image.js","names":["mayBeAnimated","mimeType","includes","arrayBufferRead","arr","start","len","Uint8Array","slice","arrayBufferReadInt","dv","DataView","getUint32","arrayBufferReadStr","String","fromCharCode","apply","blobIsAnimated","blob","arrayBuffer","flags","animationFlagMask","globalColorTable","getUint8","globalColorTableSize","Math","pow","offset","extensionIntroducer","graphicsControlLabel","delayTime","getUint16","arrayHasDiff","Array","from","i","size","length","type"],"sources":["../../src/utils/Image.ts"],"sourcesContent":["/*\n * Copyright 2022 The Matrix.org Foundation C.I.C.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { arrayHasDiff } from \"./arrays\";\n\nexport function mayBeAnimated(mimeType?: string): boolean {\n    // AVIF animation support at the time of writing is only available in Chrome hence not having `blobIsAnimated` check\n    return [\"image/gif\", \"image/webp\", \"image/png\", \"image/apng\", \"image/avif\"].includes(mimeType);\n}\n\nfunction arrayBufferRead(arr: ArrayBuffer, start: number, len: number): Uint8Array {\n    return new Uint8Array(arr.slice(start, start + len));\n}\n\nfunction arrayBufferReadInt(arr: ArrayBuffer, start: number): number {\n    const dv = new DataView(arr, start, 4);\n    return dv.getUint32(0);\n}\n\nfunction arrayBufferReadStr(arr: ArrayBuffer, start: number, len: number): string {\n    return String.fromCharCode.apply(null, arrayBufferRead(arr, start, len));\n}\n\nexport async function blobIsAnimated(mimeType: string | undefined, blob: Blob): Promise<boolean> {\n    switch (mimeType) {\n        case \"image/webp\": {\n            // Only extended file format WEBP images support animation, so grab the expected data range and verify header.\n            // Based on https://developers.google.com/speed/webp/docs/riff_container#extended_file_format\n            const arr = await blob.slice(0, 17).arrayBuffer();\n            if (\n                arrayBufferReadStr(arr, 0, 4) === \"RIFF\" &&\n                arrayBufferReadStr(arr, 8, 4) === \"WEBP\" &&\n                arrayBufferReadStr(arr, 12, 4) === \"VP8X\"\n            ) {\n                const [flags] = arrayBufferRead(arr, 16, 1);\n                // Flags: R R I L E X _A_ R (reversed)\n                const animationFlagMask = 1 << 1;\n                return (flags & animationFlagMask) != 0;\n            }\n            break;\n        }\n\n        case \"image/gif\": {\n            // Based on https://gist.github.com/zakirt/faa4a58cec5a7505b10e3686a226f285\n            // More info at http://www.matthewflickinger.com/lab/whatsinagif/bits_and_bytes.asp\n            const dv = new DataView(await blob.arrayBuffer(), 10);\n\n            const globalColorTable = dv.getUint8(0);\n            let globalColorTableSize = 0;\n            // check first bit, if 0, then we don't have a Global Color Table\n            if (globalColorTable & 0x80) {\n                // grab the last 3 bits, to calculate the global color table size -> RGB * 2^(N+1)\n                // N is the value in the last 3 bits.\n                globalColorTableSize = 3 * Math.pow(2, (globalColorTable & 0x7) + 1);\n            }\n\n            // move on to the Graphics Control Extension\n            const offset = 3 + globalColorTableSize;\n\n            const extensionIntroducer = dv.getUint8(offset);\n            const graphicsControlLabel = dv.getUint8(offset + 1);\n            let delayTime = 0;\n\n            // Graphics Control Extension section is where GIF animation data is stored\n            // First 2 bytes must be 0x21 and 0xF9\n            if ((extensionIntroducer & 0x21) && (graphicsControlLabel & 0xF9)) {\n                // skip to the 2 bytes with the delay time\n                delayTime = dv.getUint16(offset + 4);\n            }\n\n            return !!delayTime;\n        }\n\n        case \"image/png\":\n        case \"image/apng\": {\n            // Based on https://stackoverflow.com/a/68618296\n            const arr = await blob.arrayBuffer();\n            if (arrayHasDiff([\n                0x89,\n                0x50, 0x4E, 0x47,\n                0x0D, 0x0A,\n                0x1A,\n                0x0A,\n            ], Array.from(arrayBufferRead(arr, 0, 8)))) {\n                return false;\n            }\n\n            for (let i = 8; i < blob.size;) {\n                const length = arrayBufferReadInt(arr, i);\n                i += 4;\n                const type = arrayBufferReadStr(arr, i, 4);\n                i += 4;\n\n                switch (type) {\n                    case \"acTL\":\n                        return true;\n                    case \"IDAT\":\n                        return false;\n                }\n                i += length + 4;\n            }\n            break;\n        }\n    }\n\n    return false;\n}\n"],"mappings":"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"}