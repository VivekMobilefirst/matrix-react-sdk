{"version":3,"file":"ResizeNotifier.js","names":["ResizeNotifier","EventEmitter","throttle","emit","isResizing","_isResizing","startResizing","stopResizing","noisyMiddlePanel","updateMiddlePanel","throttledMiddlePanel","notifyLeftHandleResized","notifyRightHandleResized","notifyTimelineHeightChanged","notifyWindowResized"],"sources":["../../src/utils/ResizeNotifier.ts"],"sourcesContent":["/*\nCopyright 2019 - 2021 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * Fires when the middle panel has been resized (throttled).\n * @event module:utils~ResizeNotifier#\"middlePanelResized\"\n */\n/**\n * Fires when the middle panel has been resized by a pixel.\n * @event module:utils~ResizeNotifier#\"middlePanelResizedNoisy\"\n */\n\nimport { EventEmitter } from \"events\";\nimport { throttle } from \"lodash\";\n\nexport default class ResizeNotifier extends EventEmitter {\n    private _isResizing = false;\n\n    // with default options, will call fn once at first call, and then every x ms\n    // if there was another call in that timespan\n    private throttledMiddlePanel = throttle(() => this.emit(\"middlePanelResized\"), 200);\n\n    public get isResizing() {\n        return this._isResizing;\n    }\n\n    public startResizing() {\n        this._isResizing = true;\n        this.emit(\"isResizing\", true);\n    }\n\n    public stopResizing() {\n        this._isResizing = false;\n        this.emit(\"isResizing\", false);\n    }\n\n    private noisyMiddlePanel() {\n        this.emit(\"middlePanelResizedNoisy\");\n    }\n\n    private updateMiddlePanel() {\n        this.throttledMiddlePanel();\n        this.noisyMiddlePanel();\n    }\n\n    // can be called in quick succession\n    public notifyLeftHandleResized() {\n        // don't emit event for own region\n        this.updateMiddlePanel();\n    }\n\n    // can be called in quick succession\n    public notifyRightHandleResized() {\n        this.updateMiddlePanel();\n    }\n\n    public notifyTimelineHeightChanged() {\n        this.updateMiddlePanel();\n    }\n\n    // can be called in quick succession\n    public notifyWindowResized() {\n        this.updateMiddlePanel();\n    }\n}\n\n"],"mappings":";;;;;;;;;;;AAyBA;;AACA;;AA1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAKe,MAAMA,cAAN,SAA6BC,oBAA7B,CAA0C;EAAA;IAAA;IAAA,mDAC/B,KAD+B;IAAA,4DAKtB,IAAAC,gBAAA,EAAS,MAAM,KAAKC,IAAL,CAAU,oBAAV,CAAf,EAAgD,GAAhD,CALsB;EAAA;;EAOhC,IAAVC,UAAU,GAAG;IACpB,OAAO,KAAKC,WAAZ;EACH;;EAEMC,aAAa,GAAG;IACnB,KAAKD,WAAL,GAAmB,IAAnB;IACA,KAAKF,IAAL,CAAU,YAAV,EAAwB,IAAxB;EACH;;EAEMI,YAAY,GAAG;IAClB,KAAKF,WAAL,GAAmB,KAAnB;IACA,KAAKF,IAAL,CAAU,YAAV,EAAwB,KAAxB;EACH;;EAEOK,gBAAgB,GAAG;IACvB,KAAKL,IAAL,CAAU,yBAAV;EACH;;EAEOM,iBAAiB,GAAG;IACxB,KAAKC,oBAAL;IACA,KAAKF,gBAAL;EACH,CA5BoD,CA8BrD;;;EACOG,uBAAuB,GAAG;IAC7B;IACA,KAAKF,iBAAL;EACH,CAlCoD,CAoCrD;;;EACOG,wBAAwB,GAAG;IAC9B,KAAKH,iBAAL;EACH;;EAEMI,2BAA2B,GAAG;IACjC,KAAKJ,iBAAL;EACH,CA3CoD,CA6CrD;;;EACOK,mBAAmB,GAAG;IACzB,KAAKL,iBAAL;EACH;;AAhDoD"}