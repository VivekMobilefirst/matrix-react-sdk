{"version":3,"file":"VideoChannelUtils.js","names":["VIDEO_CHANNEL_MEMBER","STUCK_DEVICE_TIMEOUT_MS","ConnectionState","getVideoChannel","roomId","apps","WidgetStore","instance","getApps","find","app","WidgetType","JITSI","matches","type","data","isVideoChannel","addVideoChannel","roomName","WidgetUtils","addJitsiWidget","CallType","Video","getConnectedMembers","room","connectedLocalEcho","members","Set","now","Date","allExpireAt","Infinity","e","currentState","getStateEvents","member","getMember","getStateKey","content","getContent","devices","Array","isArray","expiresAt","expires_ts","inTheFuture","expired","userId","client","getUserId","filter","d","getDeviceId","length","membership","add","useConnectedMembers","throttleMs","setState","useState","updateState","useMemo","throttle","leading","trailing","useTypedEventEmitter","RoomStateEvent","Update","useEffect","timer","setTimeout","logger","log","clearTimeout","useJitsiParticipants","store","VideoChannelStore","participants","setParticipants","connected","useEventEmitter","VideoChannelEvent","Disconnect","Participants","updateDevices","fn","getMyMembership","devicesState","newDevices","sendStateEvent","addOurDevice","from","removeOurDevice","devicesSet","delete","fixStuckDevices","myDevices","getDevices","deviceMap","Map","map","device_id","device","get","last_seen_ts","useConnectionState","state","Connected","Connecting","Disconnected","StartConnect","Connect"],"sources":["../../src/utils/VideoChannelUtils.ts"],"sourcesContent":["/*\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { useState, useMemo, useEffect } from \"react\";\nimport { throttle } from \"lodash\";\nimport { Optional } from \"matrix-events-sdk\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\nimport { IMyDevice } from \"matrix-js-sdk/src/client\";\nimport { CallType } from \"matrix-js-sdk/src/webrtc/call\";\nimport { Room } from \"matrix-js-sdk/src/models/room\";\nimport { RoomStateEvent } from \"matrix-js-sdk/src/models/room-state\";\nimport { RoomMember } from \"matrix-js-sdk/src/models/room-member\";\n\nimport { useEventEmitter, useTypedEventEmitter } from \"../hooks/useEventEmitter\";\nimport WidgetStore, { IApp } from \"../stores/WidgetStore\";\nimport { WidgetType } from \"../widgets/WidgetType\";\nimport WidgetUtils from \"./WidgetUtils\";\nimport VideoChannelStore, { VideoChannelEvent, IJitsiParticipant } from \"../stores/VideoChannelStore\";\n\ninterface IVideoChannelMemberContent {\n    // Connected device IDs\n    devices: string[];\n    // Time at which this state event should be considered stale\n    expires_ts: number;\n}\n\nexport const VIDEO_CHANNEL_MEMBER = \"io.element.video.member\";\nexport const STUCK_DEVICE_TIMEOUT_MS = 1000 * 60 * 60; // 1 hour\n\nexport enum ConnectionState {\n    Disconnected = \"disconnected\",\n    Connecting = \"connecting\",\n    Connected = \"connected\",\n}\n\nexport const getVideoChannel = (roomId: string): IApp => {\n    const apps = WidgetStore.instance.getApps(roomId);\n    return apps.find(app => WidgetType.JITSI.matches(app.type) && app.data.isVideoChannel);\n};\n\nexport const addVideoChannel = async (roomId: string, roomName: string) => {\n    await WidgetUtils.addJitsiWidget(roomId, CallType.Video, \"Video channel\", true, roomName);\n};\n\n// Gets the members connected to a given video room, along with a timestamp\n// indicating when this data should be considered stale\nconst getConnectedMembers = (room: Room, connectedLocalEcho: boolean): [Set<RoomMember>, number] => {\n    const members = new Set<RoomMember>();\n    const now = Date.now();\n    let allExpireAt = Infinity;\n\n    for (const e of room.currentState.getStateEvents(VIDEO_CHANNEL_MEMBER)) {\n        const member = room.getMember(e.getStateKey());\n        const content = e.getContent<IVideoChannelMemberContent>();\n        let devices = Array.isArray(content.devices) ? content.devices : [];\n        const expiresAt = typeof content.expires_ts === \"number\" ? content.expires_ts : -Infinity;\n\n        // Ignore events with a timeout that's way off in the future\n        const inTheFuture = (expiresAt - ((STUCK_DEVICE_TIMEOUT_MS * 5) / 4)) > now;\n        const expired = expiresAt <= now || inTheFuture;\n\n        // Apply local echo for the disconnected case\n        if (!connectedLocalEcho && member?.userId === room.client.getUserId()) {\n            devices = devices.filter(d => d !== room.client.getDeviceId());\n        }\n        // Must have a device connected, be unexpired, and still be joined to the room\n        if (devices.length && !expired && member?.membership === \"join\") {\n            members.add(member);\n            if (expiresAt < allExpireAt) allExpireAt = expiresAt;\n        }\n    }\n\n    // Apply local echo for the connected case\n    if (connectedLocalEcho) members.add(room.getMember(room.client.getUserId()));\n    return [members, allExpireAt];\n};\n\nexport const useConnectedMembers = (\n    room: Room, connectedLocalEcho: boolean, throttleMs = 100,\n): Set<RoomMember> => {\n    const [[members, expiresAt], setState] = useState(() => getConnectedMembers(room, connectedLocalEcho));\n    const updateState = useMemo(() => throttle(() => {\n        setState(getConnectedMembers(room, connectedLocalEcho));\n    }, throttleMs, { leading: true, trailing: true }), [setState, room, connectedLocalEcho, throttleMs]);\n\n    useTypedEventEmitter(room.currentState, RoomStateEvent.Update, updateState);\n    useEffect(() => {\n        if (expiresAt < Infinity) {\n            const timer = setTimeout(() => {\n                logger.log(`Refreshing video members for ${room.roomId}`);\n                updateState();\n            }, expiresAt - Date.now());\n            return () => clearTimeout(timer);\n        }\n    }, [expiresAt, updateState, room.roomId]);\n\n    return members;\n};\n\nexport const useJitsiParticipants = (room: Room): IJitsiParticipant[] => {\n    const store = VideoChannelStore.instance;\n    const [participants, setParticipants] = useState(() =>\n        store.connected && store.roomId === room.roomId ? store.participants : [],\n    );\n\n    useEventEmitter(store, VideoChannelEvent.Disconnect, (roomId: string) => {\n        if (roomId === room.roomId) setParticipants([]);\n    });\n    useEventEmitter(store, VideoChannelEvent.Participants, (roomId: string, participants: IJitsiParticipant[]) => {\n        if (roomId === room.roomId) setParticipants(participants);\n    });\n\n    return participants;\n};\n\nconst updateDevices = async (room: Optional<Room>, fn: (devices: string[] | null) => string[]) => {\n    if (room?.getMyMembership() !== \"join\") return;\n\n    const devicesState = room.currentState.getStateEvents(VIDEO_CHANNEL_MEMBER, room.client.getUserId());\n    const devices = devicesState?.getContent<IVideoChannelMemberContent>()?.devices ?? [];\n    const newDevices = fn(devices);\n\n    if (newDevices) {\n        const content: IVideoChannelMemberContent = {\n            devices: newDevices,\n            expires_ts: Date.now() + STUCK_DEVICE_TIMEOUT_MS,\n        };\n\n        await room.client.sendStateEvent(room.roomId, VIDEO_CHANNEL_MEMBER, content, room.client.getUserId());\n    }\n};\n\nexport const addOurDevice = async (room: Room) => {\n    await updateDevices(room, devices => Array.from(new Set(devices).add(room.client.getDeviceId())));\n};\n\nexport const removeOurDevice = async (room: Room) => {\n    await updateDevices(room, devices => {\n        const devicesSet = new Set(devices);\n        devicesSet.delete(room.client.getDeviceId());\n        return Array.from(devicesSet);\n    });\n};\n\n/**\n * Fixes devices that may have gotten stuck in video channel member state after\n * an unclean disconnection, by filtering out logged out devices, inactive\n * devices, and our own device (if we're disconnected).\n * @param {Room} room The room to fix\n * @param {boolean} connectedLocalEcho Local echo of whether this device is connected\n */\nexport const fixStuckDevices = async (room: Room, connectedLocalEcho: boolean) => {\n    const now = Date.now();\n    const { devices: myDevices } = await room.client.getDevices();\n    const deviceMap = new Map<string, IMyDevice>(myDevices.map(d => [d.device_id, d]));\n\n    await updateDevices(room, devices => {\n        const newDevices = devices.filter(d => {\n            const device = deviceMap.get(d);\n            return device?.last_seen_ts\n                && !(d === room.client.getDeviceId() && !connectedLocalEcho)\n                && (now - device.last_seen_ts) < STUCK_DEVICE_TIMEOUT_MS;\n        });\n\n        // Skip the update if the devices are unchanged\n        return newDevices.length === devices.length ? null : newDevices;\n    });\n};\n\nexport const useConnectionState = (room: Room): ConnectionState => {\n    const store = VideoChannelStore.instance;\n    const [state, setState] = useState(() =>\n        store.roomId === room.roomId\n            ? store.connected\n                ? ConnectionState.Connected\n                : ConnectionState.Connecting\n            : ConnectionState.Disconnected,\n    );\n\n    useEventEmitter(store, VideoChannelEvent.Disconnect, (roomId: string) => {\n        if (roomId === room.roomId) setState(ConnectionState.Disconnected);\n    });\n    useEventEmitter(store, VideoChannelEvent.StartConnect, (roomId: string) => {\n        if (roomId === room.roomId) setState(ConnectionState.Connecting);\n    });\n    useEventEmitter(store, VideoChannelEvent.Connect, (roomId: string) => {\n        if (roomId === room.roomId) setState(ConnectionState.Connected);\n    });\n\n    return state;\n};\n"],"mappings":"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"}