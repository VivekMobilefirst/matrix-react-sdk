{"version":3,"file":"startDm.js","names":["startDm","client","targets","showSpinner","targetIds","map","t","userId","existingRoom","length","findDMForUser","DMRoomMap","shared","getDMRoomForIdentifiers","isLocalRoom","dis","dispatch","action","Action","ViewRoom","room_id","roomId","should_peek","joining","metricsTrigger","Promise","resolve","createRoomOptions","inlineErrors","determineCreateRoomEncryptionOption","encryption","isSelf","getUserId","dmUserId","createOpts","reduce","roomOptions","address","type","getAddressType","invite","id_server","getIdentityServerUrl","medium","invite_3pid","push","spinner","createRoom"],"sources":["../../../src/utils/dm/startDm.ts"],"sourcesContent":["/*\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { IInvite3PID, MatrixClient, Room } from \"matrix-js-sdk/src/matrix\";\n\nimport { Action } from \"../../dispatcher/actions\";\nimport { ViewRoomPayload } from \"../../dispatcher/payloads/ViewRoomPayload\";\nimport { determineCreateRoomEncryptionOption, Member } from \"../direct-messages\";\nimport DMRoomMap from \"../DMRoomMap\";\nimport { isLocalRoom } from \"../localRoom/isLocalRoom\";\nimport { findDMForUser } from \"./findDMForUser\";\nimport dis from \"../../dispatcher/dispatcher\";\nimport { getAddressType } from \"../../UserAddress\";\nimport createRoom from \"../../createRoom\";\n\n/**\n * Start a DM.\n *\n * @returns {Promise<string | null} Resolves to the room id.\n */\nexport async function startDm(client: MatrixClient, targets: Member[], showSpinner = true): Promise<string | null> {\n    const targetIds = targets.map(t => t.userId);\n\n    // Check if there is already a DM with these people and reuse it if possible.\n    let existingRoom: Room;\n    if (targetIds.length === 1) {\n        existingRoom = findDMForUser(client, targetIds[0]);\n    } else {\n        existingRoom = DMRoomMap.shared().getDMRoomForIdentifiers(targetIds);\n    }\n    if (existingRoom && !isLocalRoom(existingRoom)) {\n        dis.dispatch<ViewRoomPayload>({\n            action: Action.ViewRoom,\n            room_id: existingRoom.roomId,\n            should_peek: false,\n            joining: false,\n            metricsTrigger: \"MessageUser\",\n        });\n        return Promise.resolve(existingRoom.roomId);\n    }\n\n    const createRoomOptions = { inlineErrors: true } as any; // XXX: Type out `createRoomOptions`\n\n    if (await determineCreateRoomEncryptionOption(client, targets)) {\n        createRoomOptions.encryption = true;\n    }\n\n    // Check if it's a traditional DM and create the room if required.\n    // TODO: [Canonical DMs] Remove this check and instead just create the multi-person DM\n    const isSelf = targetIds.length === 1 && targetIds[0] === client.getUserId();\n    if (targetIds.length === 1 && !isSelf) {\n        createRoomOptions.dmUserId = targetIds[0];\n    }\n\n    if (targetIds.length > 1) {\n        createRoomOptions.createOpts = targetIds.reduce(\n            (roomOptions, address) => {\n                const type = getAddressType(address);\n                if (type === 'email') {\n                    const invite: IInvite3PID = {\n                        id_server: client.getIdentityServerUrl(true),\n                        medium: 'email',\n                        address,\n                    };\n                    roomOptions.invite_3pid.push(invite);\n                } else if (type === 'mx-user-id') {\n                    roomOptions.invite.push(address);\n                }\n                return roomOptions;\n            },\n            { invite: [], invite_3pid: [] },\n        );\n    }\n\n    createRoomOptions.spinner = showSpinner;\n    return createRoom(createRoomOptions);\n}\n"],"mappings":";;;;;;;;;AAkBA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AA1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAcA;AACA;AACA;AACA;AACA;AACO,eAAeA,OAAf,CAAuBC,MAAvB,EAA6CC,OAA7C,EAA4G;EAAA,IAA5CC,WAA4C,uEAA9B,IAA8B;EAC/G,MAAMC,SAAS,GAAGF,OAAO,CAACG,GAAR,CAAYC,CAAC,IAAIA,CAAC,CAACC,MAAnB,CAAlB,CAD+G,CAG/G;;EACA,IAAIC,YAAJ;;EACA,IAAIJ,SAAS,CAACK,MAAV,KAAqB,CAAzB,EAA4B;IACxBD,YAAY,GAAG,IAAAE,4BAAA,EAAcT,MAAd,EAAsBG,SAAS,CAAC,CAAD,CAA/B,CAAf;EACH,CAFD,MAEO;IACHI,YAAY,GAAGG,kBAAA,CAAUC,MAAV,GAAmBC,uBAAnB,CAA2CT,SAA3C,CAAf;EACH;;EACD,IAAII,YAAY,IAAI,CAAC,IAAAM,wBAAA,EAAYN,YAAZ,CAArB,EAAgD;IAC5CO,mBAAA,CAAIC,QAAJ,CAA8B;MAC1BC,MAAM,EAAEC,eAAA,CAAOC,QADW;MAE1BC,OAAO,EAAEZ,YAAY,CAACa,MAFI;MAG1BC,WAAW,EAAE,KAHa;MAI1BC,OAAO,EAAE,KAJiB;MAK1BC,cAAc,EAAE;IALU,CAA9B;;IAOA,OAAOC,OAAO,CAACC,OAAR,CAAgBlB,YAAY,CAACa,MAA7B,CAAP;EACH;;EAED,MAAMM,iBAAiB,GAAG;IAAEC,YAAY,EAAE;EAAhB,CAA1B,CArB+G,CAqBtD;;EAEzD,IAAI,MAAM,IAAAC,mDAAA,EAAoC5B,MAApC,EAA4CC,OAA5C,CAAV,EAAgE;IAC5DyB,iBAAiB,CAACG,UAAlB,GAA+B,IAA/B;EACH,CAzB8G,CA2B/G;EACA;;;EACA,MAAMC,MAAM,GAAG3B,SAAS,CAACK,MAAV,KAAqB,CAArB,IAA0BL,SAAS,CAAC,CAAD,CAAT,KAAiBH,MAAM,CAAC+B,SAAP,EAA1D;;EACA,IAAI5B,SAAS,CAACK,MAAV,KAAqB,CAArB,IAA0B,CAACsB,MAA/B,EAAuC;IACnCJ,iBAAiB,CAACM,QAAlB,GAA6B7B,SAAS,CAAC,CAAD,CAAtC;EACH;;EAED,IAAIA,SAAS,CAACK,MAAV,GAAmB,CAAvB,EAA0B;IACtBkB,iBAAiB,CAACO,UAAlB,GAA+B9B,SAAS,CAAC+B,MAAV,CAC3B,CAACC,WAAD,EAAcC,OAAd,KAA0B;MACtB,MAAMC,IAAI,GAAG,IAAAC,2BAAA,EAAeF,OAAf,CAAb;;MACA,IAAIC,IAAI,KAAK,OAAb,EAAsB;QAClB,MAAME,MAAmB,GAAG;UACxBC,SAAS,EAAExC,MAAM,CAACyC,oBAAP,CAA4B,IAA5B,CADa;UAExBC,MAAM,EAAE,OAFgB;UAGxBN;QAHwB,CAA5B;QAKAD,WAAW,CAACQ,WAAZ,CAAwBC,IAAxB,CAA6BL,MAA7B;MACH,CAPD,MAOO,IAAIF,IAAI,KAAK,YAAb,EAA2B;QAC9BF,WAAW,CAACI,MAAZ,CAAmBK,IAAnB,CAAwBR,OAAxB;MACH;;MACD,OAAOD,WAAP;IACH,CAd0B,EAe3B;MAAEI,MAAM,EAAE,EAAV;MAAcI,WAAW,EAAE;IAA3B,CAf2B,CAA/B;EAiBH;;EAEDjB,iBAAiB,CAACmB,OAAlB,GAA4B3C,WAA5B;EACA,OAAO,IAAA4C,mBAAA,EAAWpB,iBAAX,CAAP;AACH"}