{"version":3,"file":"leave-behaviour.js","names":["leaveRoomBehaviour","roomId","retry","spinner","spinnerModal","Modal","createDialog","Spinner","cli","MatrixClientPeg","get","leavingAllVersions","history","getRoomUpgradeHistory","length","currentRoom","room","getRoom","Promise","all","getPendingEvents","filter","ev","EventStatus","QUEUED","ENCRYPTING","SENDING","includes","status","map","resolve","reject","handler","NOT_SENT","close","error","SENT","off","MatrixEventEvent","Status","on","results","leave","e","data","errcode","message","_t","Object","assign","Error","leaveRoomChain","limitExceededError","values","find","sleep","retry_after_ms","errors","entries","r","messages","roomErr","err","ErrorDialog","title","description","push","React","createElement","isMetaSpace","SpaceStore","instance","activeSpace","RoomViewStore","getRoomId","dis","dispatch","action","Action","ViewRoom","room_id","metricsTrigger","undefined","ViewHomePage","leaveSpace","space","LeaveSpaceDialog","onFinished","rooms","bulkSpaceBehaviour","AfterLeaveRoom"],"sources":["../../src/utils/leave-behaviour.ts"],"sourcesContent":["/*\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { sleep } from \"matrix-js-sdk/src/utils\";\nimport React from \"react\";\nimport { EventStatus } from \"matrix-js-sdk/src/models/event-status\";\nimport { MatrixEventEvent } from \"matrix-js-sdk/src/models/event\";\nimport { Room } from \"matrix-js-sdk/src/models/room\";\n\nimport Modal, { IHandle } from \"../Modal\";\nimport Spinner from \"../components/views/elements/Spinner\";\nimport { MatrixClientPeg } from \"../MatrixClientPeg\";\nimport { _t } from \"../languageHandler\";\nimport ErrorDialog from \"../components/views/dialogs/ErrorDialog\";\nimport { isMetaSpace } from \"../stores/spaces\";\nimport SpaceStore from \"../stores/spaces/SpaceStore\";\nimport { RoomViewStore } from \"../stores/RoomViewStore\";\nimport dis from \"../dispatcher/dispatcher\";\nimport { ViewRoomPayload } from \"../dispatcher/payloads/ViewRoomPayload\";\nimport { Action } from \"../dispatcher/actions\";\nimport { ViewHomePagePayload } from \"../dispatcher/payloads/ViewHomePagePayload\";\nimport LeaveSpaceDialog from \"../components/views/dialogs/LeaveSpaceDialog\";\nimport { AfterLeaveRoomPayload } from \"../dispatcher/payloads/AfterLeaveRoomPayload\";\nimport { bulkSpaceBehaviour } from \"./space\";\n\nexport async function leaveRoomBehaviour(roomId: string, retry = true, spinner = true) {\n    let spinnerModal: IHandle<any>;\n    if (spinner) {\n        spinnerModal = Modal.createDialog(Spinner, null, 'mx_Dialog_spinner');\n    }\n\n    const cli = MatrixClientPeg.get();\n    let leavingAllVersions = true;\n    const history = cli.getRoomUpgradeHistory(roomId);\n    if (history && history.length > 0) {\n        const currentRoom = history[history.length - 1];\n        if (currentRoom.roomId !== roomId) {\n            // The user is trying to leave an older version of the room. Let them through\n            // without making them leave the current version of the room.\n            leavingAllVersions = false;\n        }\n    }\n\n    const room = cli.getRoom(roomId);\n    // await any queued messages being sent so that they do not fail\n    await Promise.all(room.getPendingEvents().filter(ev => {\n        return [EventStatus.QUEUED, EventStatus.ENCRYPTING, EventStatus.SENDING].includes(ev.status);\n    }).map(ev => new Promise<void>((resolve, reject) => {\n        const handler = () => {\n            if (ev.status === EventStatus.NOT_SENT) {\n                spinnerModal?.close();\n                reject(ev.error);\n            }\n\n            if (!ev.status || ev.status === EventStatus.SENT) {\n                ev.off(MatrixEventEvent.Status, handler);\n                resolve();\n            }\n        };\n\n        ev.on(MatrixEventEvent.Status, handler);\n    })));\n\n    let results: { [roomId: string]: Error & { errcode?: string, message: string, data?: Record<string, any> } } = {};\n    if (!leavingAllVersions) {\n        try {\n            await cli.leave(roomId);\n        } catch (e) {\n            if (e?.data?.errcode) {\n                const message = e.data.error || _t(\"Unexpected server error trying to leave the room\");\n                results[roomId] = Object.assign(new Error(message), { errcode: e.data.errcode, data: e.data });\n            } else {\n                results[roomId] = e || new Error(\"Failed to leave room for unknown causes\");\n            }\n        }\n    } else {\n        results = await cli.leaveRoomChain(roomId, retry);\n    }\n\n    if (retry) {\n        const limitExceededError = Object.values(results).find(e => e?.errcode === \"M_LIMIT_EXCEEDED\");\n        if (limitExceededError) {\n            await sleep(limitExceededError.data.retry_after_ms ?? 100);\n            return leaveRoomBehaviour(roomId, false, false);\n        }\n    }\n\n    spinnerModal?.close();\n\n    const errors = Object.entries(results).filter(r => !!r[1]);\n    if (errors.length > 0) {\n        const messages = [];\n        for (const roomErr of errors) {\n            const err = roomErr[1]; // [0] is the roomId\n            let message = _t(\"Unexpected server error trying to leave the room\");\n            if (err.errcode && err.message) {\n                if (err.errcode === 'M_CANNOT_LEAVE_SERVER_NOTICE_ROOM') {\n                    Modal.createDialog(ErrorDialog, {\n                        title: _t(\"Can't leave Server Notices room\"),\n                        description: _t(\n                            \"This room is used for important messages from the Homeserver, \" +\n                            \"so you cannot leave it.\",\n                        ),\n                    });\n                    return;\n                }\n                message = results[roomId].message;\n            }\n            messages.push(message, React.createElement('BR')); // createElement to avoid using a tsx file in utils\n        }\n        Modal.createDialog(ErrorDialog, {\n            title: _t(\"Error leaving room\"),\n            description: messages,\n        });\n        return;\n    }\n\n    if (!isMetaSpace(SpaceStore.instance.activeSpace) &&\n        SpaceStore.instance.activeSpace !== roomId &&\n        RoomViewStore.instance.getRoomId() === roomId\n    ) {\n        dis.dispatch<ViewRoomPayload>({\n            action: Action.ViewRoom,\n            room_id: SpaceStore.instance.activeSpace,\n            metricsTrigger: undefined, // other\n        });\n    } else {\n        dis.dispatch<ViewHomePagePayload>({ action: Action.ViewHomePage });\n    }\n}\n\nexport const leaveSpace = (space: Room) => {\n    Modal.createDialog(LeaveSpaceDialog, {\n        space,\n        onFinished: async (leave: boolean, rooms: Room[]) => {\n            if (!leave) return;\n            await bulkSpaceBehaviour(space, rooms, room => leaveRoomBehaviour(room.roomId));\n\n            dis.dispatch<AfterLeaveRoomPayload>({\n                action: Action.AfterLeaveRoom,\n                room_id: space.roomId,\n            });\n        },\n    }, \"mx_LeaveSpaceDialog_wrapper\");\n};\n"],"mappings":"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"}