{"version":3,"file":"isRoomReady.js","names":["isRoomReady","client","localRoom","actualRoomId","room","getRoom","getInvitedAndJoinedMemberCount","targets","length","roomHistoryVisibilityEvents","currentState","getStateEvents","EventType","RoomHistoryVisibility","roomEncryptionEvents","RoomEncryption","encrypted"],"sources":["../../../src/utils/localRoom/isRoomReady.ts"],"sourcesContent":["/*\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { EventType, MatrixClient } from \"matrix-js-sdk/src/matrix\";\n\nimport { LocalRoom } from \"../../models/LocalRoom\";\n\n/**\n * Tests whether a room created based on a local room is ready.\n */\nexport function isRoomReady(\n    client: MatrixClient,\n    localRoom: LocalRoom,\n): boolean {\n    // not ready if no actual room id exists\n    if (!localRoom.actualRoomId) return false;\n\n    const room = client.getRoom(localRoom.actualRoomId);\n    // not ready if the room does not exist\n    if (!room) return false;\n\n    // not ready if not all members joined/invited\n    if (room.getInvitedAndJoinedMemberCount() !== 1 + localRoom.targets?.length) return false;\n\n    const roomHistoryVisibilityEvents = room.currentState.getStateEvents(EventType.RoomHistoryVisibility);\n    // not ready if the room history has not been configured\n    if (roomHistoryVisibilityEvents.length === 0) return false;\n\n    const roomEncryptionEvents = room.currentState.getStateEvents(EventType.RoomEncryption);\n    // not ready if encryption has not been configured (applies only to encrypted rooms)\n    if (localRoom.encrypted === true && roomEncryptionEvents.length === 0) return false;\n\n    return true;\n}\n"],"mappings":";;;;;;;AAgBA;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACO,SAASA,WAAT,CACHC,MADG,EAEHC,SAFG,EAGI;EACP;EACA,IAAI,CAACA,SAAS,CAACC,YAAf,EAA6B,OAAO,KAAP;EAE7B,MAAMC,IAAI,GAAGH,MAAM,CAACI,OAAP,CAAeH,SAAS,CAACC,YAAzB,CAAb,CAJO,CAKP;;EACA,IAAI,CAACC,IAAL,EAAW,OAAO,KAAP,CANJ,CAQP;;EACA,IAAIA,IAAI,CAACE,8BAAL,OAA0C,IAAIJ,SAAS,CAACK,OAAV,EAAmBC,MAArE,EAA6E,OAAO,KAAP;EAE7E,MAAMC,2BAA2B,GAAGL,IAAI,CAACM,YAAL,CAAkBC,cAAlB,CAAiCC,iBAAA,CAAUC,qBAA3C,CAApC,CAXO,CAYP;;EACA,IAAIJ,2BAA2B,CAACD,MAA5B,KAAuC,CAA3C,EAA8C,OAAO,KAAP;EAE9C,MAAMM,oBAAoB,GAAGV,IAAI,CAACM,YAAL,CAAkBC,cAAlB,CAAiCC,iBAAA,CAAUG,cAA3C,CAA7B,CAfO,CAgBP;;EACA,IAAIb,SAAS,CAACc,SAAV,KAAwB,IAAxB,IAAgCF,oBAAoB,CAACN,MAArB,KAAgC,CAApE,EAAuE,OAAO,KAAP;EAEvE,OAAO,IAAP;AACH"}