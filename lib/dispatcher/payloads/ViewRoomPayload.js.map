{"version":3,"file":"ViewRoomPayload.js","names":[],"sources":["../../../src/dispatcher/payloads/ViewRoomPayload.ts"],"sourcesContent":["/*\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { MatrixEvent } from \"matrix-js-sdk/src/models/event\";\nimport { ViewRoom as ViewRoomEvent } from \"@matrix-org/analytics-events/types/typescript/ViewRoom\";\n\nimport { ActionPayload } from \"../payloads\";\nimport { Action } from \"../actions\";\nimport { IOOBData, IThreepidInvite } from \"../../stores/ThreepidInviteStore\";\nimport { IOpts } from \"../../createRoom\";\n\n/* eslint-disable camelcase */\nexport interface ViewRoomPayload extends Pick<ActionPayload, \"action\"> {\n    action: Action.ViewRoom;\n\n    // either or both of room_id or room_alias must be specified\n    // where possible, a room_id should be provided with a room_alias as it reduces\n    // the number of API calls required.\n    room_id?: string;\n    room_alias?: string;\n\n    event_id?: string; // the event to ensure is in view if any\n    highlighted?: boolean; // whether to highlight `event_id`\n    scroll_into_view?: boolean; // whether to scroll `event_id` into view\n    should_peek?: boolean; // whether we should peek the room if we are not yet joined\n    joining?: boolean; // whether we have already sent a join request for this room\n    via_servers?: string[]; // the list of servers to join via if no room_alias is provided\n    context_switch?: boolean; // whether this view room was a consequence of switching spaces\n    replyingToEvent?: MatrixEvent; // the event we are replying to in this room if any\n    auto_join?: boolean; // whether to automatically join the room if we are not already\n    threepid_invite?: IThreepidInvite; // details about any 3pid invite we have to this room\n    justCreatedOpts?: IOpts; // if this is a newly created room then this is a reference to the creation opts\n    oob_data?: IOOBData; // any out-of-band data about this room can be used to render some room details without peeking\n    forceTimeline?: boolean; // Whether to override default behaviour to end up at a timeline\n    show_room_tile?: boolean; // Whether to ensure that the room tile is visible in the room list\n    clear_search?: boolean; // Whether to clear the room list search\n\n    deferred_action?: ActionPayload; // Action to fire after MatrixChat handles this ViewRoom action\n\n    // additional parameters for the purpose of metrics & instrumentation\n    metricsTrigger: ViewRoomEvent[\"trigger\"];\n    metricsViaKeyboard?: ViewRoomEvent[\"viaKeyboard\"];\n}\n/* eslint-enable camelcase */\n"],"mappings":""}