{"version":3,"file":"useRoomMembers.js","names":["useRoomMembers","room","throttleWait","members","setMembers","useState","getJoinedMembers","useTypedEventEmitter","currentState","RoomStateEvent","Update","throttle","leading","trailing","useRoomMemberCount","count","setCount","getJoinedMemberCount","useMyRoomMembership","membership","setMembership","getMyMembership","RoomEvent","MyMembership"],"sources":["../../src/hooks/useRoomMembers.ts"],"sourcesContent":["/*\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { useState } from \"react\";\nimport { Room, RoomEvent } from \"matrix-js-sdk/src/models/room\";\nimport { RoomMember } from \"matrix-js-sdk/src/models/room-member\";\nimport { RoomStateEvent } from \"matrix-js-sdk/src/models/room-state\";\nimport { throttle } from \"lodash\";\n\nimport { useTypedEventEmitter } from \"./useEventEmitter\";\n\n// Hook to simplify watching Matrix Room joined members\nexport const useRoomMembers = (room: Room, throttleWait = 250): RoomMember[] => {\n    const [members, setMembers] = useState<RoomMember[]>(room.getJoinedMembers());\n    useTypedEventEmitter(room.currentState, RoomStateEvent.Update, throttle(() => {\n        setMembers(room.getJoinedMembers());\n    }, throttleWait, { leading: true, trailing: true }));\n    return members;\n};\n\n// Hook to simplify watching Matrix Room joined member count\nexport const useRoomMemberCount = (room: Room, throttleWait = 250): number => {\n    const [count, setCount] = useState<number>(room.getJoinedMemberCount());\n    useTypedEventEmitter(room.currentState, RoomStateEvent.Update, throttle(() => {\n        setCount(room.getJoinedMemberCount());\n    }, throttleWait, { leading: true, trailing: true }));\n    return count;\n};\n\n// Hook to simplify watching the local user's membership in a room\nexport const useMyRoomMembership = (room: Room): string => {\n    const [membership, setMembership] = useState<string>(room.getMyMembership());\n    useTypedEventEmitter(room, RoomEvent.MyMembership, () => {\n        setMembership(room.getMyMembership());\n    });\n    return membership;\n};\n"],"mappings":";;;;;;;AAgBA;;AACA;;AAEA;;AACA;;AAEA;;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACO,MAAMA,cAAc,GAAG,UAACC,IAAD,EAAkD;EAAA,IAArCC,YAAqC,uEAAtB,GAAsB;EAC5E,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB,IAAAC,eAAA,EAAuBJ,IAAI,CAACK,gBAAL,EAAvB,CAA9B;EACA,IAAAC,qCAAA,EAAqBN,IAAI,CAACO,YAA1B,EAAwCC,yBAAA,CAAeC,MAAvD,EAA+D,IAAAC,gBAAA,EAAS,MAAM;IAC1EP,UAAU,CAACH,IAAI,CAACK,gBAAL,EAAD,CAAV;EACH,CAF8D,EAE5DJ,YAF4D,EAE9C;IAAEU,OAAO,EAAE,IAAX;IAAiBC,QAAQ,EAAE;EAA3B,CAF8C,CAA/D;EAGA,OAAOV,OAAP;AACH,CANM,C,CAQP;;;;;AACO,MAAMW,kBAAkB,GAAG,UAACb,IAAD,EAA4C;EAAA,IAA/BC,YAA+B,uEAAhB,GAAgB;EAC1E,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoB,IAAAX,eAAA,EAAiBJ,IAAI,CAACgB,oBAAL,EAAjB,CAA1B;EACA,IAAAV,qCAAA,EAAqBN,IAAI,CAACO,YAA1B,EAAwCC,yBAAA,CAAeC,MAAvD,EAA+D,IAAAC,gBAAA,EAAS,MAAM;IAC1EK,QAAQ,CAACf,IAAI,CAACgB,oBAAL,EAAD,CAAR;EACH,CAF8D,EAE5Df,YAF4D,EAE9C;IAAEU,OAAO,EAAE,IAAX;IAAiBC,QAAQ,EAAE;EAA3B,CAF8C,CAA/D;EAGA,OAAOE,KAAP;AACH,CANM,C,CAQP;;;;;AACO,MAAMG,mBAAmB,GAAIjB,IAAD,IAAwB;EACvD,MAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8B,IAAAf,eAAA,EAAiBJ,IAAI,CAACoB,eAAL,EAAjB,CAApC;EACA,IAAAd,qCAAA,EAAqBN,IAArB,EAA2BqB,eAAA,CAAUC,YAArC,EAAmD,MAAM;IACrDH,aAAa,CAACnB,IAAI,CAACoB,eAAL,EAAD,CAAb;EACH,CAFD;EAGA,OAAOF,UAAP;AACH,CANM"}