{"version":3,"file":"recent.js","names":["SETTING_NAME","STORAGE_LIMIT","migrate","data","JSON","parse","window","localStorage","mx_reaction_count","sorted","Object","entries","sort","count1","date1","count2","date2","newFormat","map","emoji","count","date","SettingsStore","setValue","SettingLevel","ACCOUNT","slice","getRecentEmoji","getValue","add","recents","i","findIndex","e","newEntry","splice","get","limit","length","orderBy"],"sources":["../../src/emojipicker/recent.ts"],"sourcesContent":["/*\nCopyright 2019 Tulir Asokan <tulir@maunium.net>\nCopyright 2020 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { orderBy } from \"lodash\";\n\nimport SettingsStore from \"../settings/SettingsStore\";\nimport { SettingLevel } from \"../settings/SettingLevel\";\n\ninterface ILegacyFormat {\n    [emoji: string]: [number, number]; // [count, date]\n}\n\n// New format tries to be more space efficient for synchronization. Ordered by Date descending.\ntype Format = [string, number][]; // [emoji, count]\n\nconst SETTING_NAME = \"recent_emoji\";\n\n// we store more recents than we typically query but this lets us sort by weighted usage\n// even if you haven't used your typically favourite emoji for a little while.\nconst STORAGE_LIMIT = 100;\n\n// TODO remove this after some time\nfunction migrate() {\n    const data: ILegacyFormat = JSON.parse(window.localStorage.mx_reaction_count || '{}');\n    const sorted = Object.entries(data).sort(([, [count1, date1]], [, [count2, date2]]) => date2 - date1);\n    const newFormat = sorted.map(([emoji, [count, date]]) => [emoji, count]);\n    SettingsStore.setValue(SETTING_NAME, null, SettingLevel.ACCOUNT, newFormat.slice(0, STORAGE_LIMIT));\n}\n\nfunction getRecentEmoji(): Format {\n    return SettingsStore.getValue(SETTING_NAME) || [];\n}\n\nexport function add(emoji: string) {\n    const recents = getRecentEmoji();\n    const i = recents.findIndex(([e]) => e === emoji);\n\n    let newEntry;\n    if (i >= 0) {\n        // first remove the existing tuple so that we can increment it and push it to the front\n        [newEntry] = recents.splice(i, 1);\n        newEntry[1]++; // increment the usage count\n    } else {\n        newEntry = [emoji, 1];\n    }\n\n    SettingsStore.setValue(SETTING_NAME, null, SettingLevel.ACCOUNT, [newEntry, ...recents].slice(0, STORAGE_LIMIT));\n}\n\nexport function get(limit = 24) {\n    let recents = getRecentEmoji();\n\n    if (recents.length < 1) {\n        migrate();\n        recents = getRecentEmoji();\n    }\n\n    // perform a stable sort on `count` to keep the recent (date) order as a secondary sort factor\n    const sorted = orderBy(recents, \"1\", \"desc\");\n    return sorted.slice(0, limit).map(([emoji]) => emoji);\n}\n"],"mappings":";;;;;;;;;;AAiBA;;AAEA;;AACA;;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYkC;AAElC,MAAMA,YAAY,GAAG,cAArB,C,CAEA;AACA;;AACA,MAAMC,aAAa,GAAG,GAAtB,C,CAEA;;AACA,SAASC,OAAT,GAAmB;EACf,MAAMC,IAAmB,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,iBAApB,IAAyC,IAApD,CAA5B;EACA,MAAMC,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAeR,IAAf,EAAqBS,IAArB,CAA0B;IAAA,IAAC,GAAG,CAACC,MAAD,EAASC,KAAT,CAAH,CAAD;IAAA,IAAsB,GAAG,CAACC,MAAD,EAASC,KAAT,CAAH,CAAtB;IAAA,OAA8CA,KAAK,GAAGF,KAAtD;EAAA,CAA1B,CAAf;EACA,MAAMG,SAAS,GAAGR,MAAM,CAACS,GAAP,CAAW;IAAA,IAAC,CAACC,KAAD,EAAQ,CAACC,KAAD,EAAQC,IAAR,CAAR,CAAD;IAAA,OAA4B,CAACF,KAAD,EAAQC,KAAR,CAA5B;EAAA,CAAX,CAAlB;;EACAE,sBAAA,CAAcC,QAAd,CAAuBvB,YAAvB,EAAqC,IAArC,EAA2CwB,0BAAA,CAAaC,OAAxD,EAAiER,SAAS,CAACS,KAAV,CAAgB,CAAhB,EAAmBzB,aAAnB,CAAjE;AACH;;AAED,SAAS0B,cAAT,GAAkC;EAC9B,OAAOL,sBAAA,CAAcM,QAAd,CAAuB5B,YAAvB,KAAwC,EAA/C;AACH;;AAEM,SAAS6B,GAAT,CAAaV,KAAb,EAA4B;EAC/B,MAAMW,OAAO,GAAGH,cAAc,EAA9B;EACA,MAAMI,CAAC,GAAGD,OAAO,CAACE,SAAR,CAAkB;IAAA,IAAC,CAACC,CAAD,CAAD;IAAA,OAASA,CAAC,KAAKd,KAAf;EAAA,CAAlB,CAAV;EAEA,IAAIe,QAAJ;;EACA,IAAIH,CAAC,IAAI,CAAT,EAAY;IACR;IACA,CAACG,QAAD,IAAaJ,OAAO,CAACK,MAAR,CAAeJ,CAAf,EAAkB,CAAlB,CAAb;IACAG,QAAQ,CAAC,CAAD,CAAR,GAHQ,CAGO;EAClB,CAJD,MAIO;IACHA,QAAQ,GAAG,CAACf,KAAD,EAAQ,CAAR,CAAX;EACH;;EAEDG,sBAAA,CAAcC,QAAd,CAAuBvB,YAAvB,EAAqC,IAArC,EAA2CwB,0BAAA,CAAaC,OAAxD,EAAiE,CAACS,QAAD,EAAW,GAAGJ,OAAd,EAAuBJ,KAAvB,CAA6B,CAA7B,EAAgCzB,aAAhC,CAAjE;AACH;;AAEM,SAASmC,GAAT,GAAyB;EAAA,IAAZC,KAAY,uEAAJ,EAAI;EAC5B,IAAIP,OAAO,GAAGH,cAAc,EAA5B;;EAEA,IAAIG,OAAO,CAACQ,MAAR,GAAiB,CAArB,EAAwB;IACpBpC,OAAO;IACP4B,OAAO,GAAGH,cAAc,EAAxB;EACH,CAN2B,CAQ5B;;;EACA,MAAMlB,MAAM,GAAG,IAAA8B,eAAA,EAAQT,OAAR,EAAiB,GAAjB,EAAsB,MAAtB,CAAf;EACA,OAAOrB,MAAM,CAACiB,KAAP,CAAa,CAAb,EAAgBW,KAAhB,EAAuBnB,GAAvB,CAA2B;IAAA,IAAC,CAACC,KAAD,CAAD;IAAA,OAAaA,KAAb;EAAA,CAA3B,CAAP;AACH"}