{"version":3,"file":"LocalRoom.js","names":["LOCAL_ROOM_ID_PREFIX","LocalRoomState","LocalRoom","Room","constructor","roomId","client","myUserId","pendingEventOrdering","PendingEventOrdering","Detached","NEW","name","getDefaultRoomName","isNew","state","isCreated","CREATED","isError","ERROR"],"sources":["../../src/models/LocalRoom.ts"],"sourcesContent":["/*\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { MatrixClient, Room, PendingEventOrdering } from \"matrix-js-sdk/src/matrix\";\n\nimport { Member } from \"../utils/direct-messages\";\n\nexport const LOCAL_ROOM_ID_PREFIX = 'local+';\n\nexport enum LocalRoomState {\n    NEW, // new local room; only known to the client\n    CREATING, // real room is being created\n    CREATED, // real room has been created via API; events applied\n    ERROR, // error during room creation\n}\n\n/**\n * A local room that only exists client side.\n * Its main purpose is to be used for temporary rooms when creating a DM.\n */\nexport class LocalRoom extends Room {\n    /** Whether the actual room should be encrypted. */\n    encrypted = false;\n    /** If the actual room has been created, this holds its ID. */\n    actualRoomId: string;\n    /** DM chat partner */\n    targets: Member[] = [];\n    /** Callbacks that should be invoked after the actual room has been created. */\n    afterCreateCallbacks: Function[] = [];\n    state: LocalRoomState = LocalRoomState.NEW;\n\n    constructor(roomId: string, client: MatrixClient, myUserId: string) {\n        super(roomId, client, myUserId, { pendingEventOrdering: PendingEventOrdering.Detached });\n        this.name = this.getDefaultRoomName(myUserId);\n    }\n\n    public get isNew(): boolean {\n        return this.state === LocalRoomState.NEW;\n    }\n\n    public get isCreated(): boolean {\n        return this.state === LocalRoomState.CREATED;\n    }\n\n    public get isError(): boolean {\n        return this.state === LocalRoomState.ERROR;\n    }\n}\n"],"mappings":";;;;;;;;;;;AAgBA;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMO,MAAMA,oBAAoB,GAAG,QAA7B;;IAEKC,c;AAOZ;AACA;AACA;AACA;;;;WAVYA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;EAAAA,c,CAAAA,c;GAAAA,c,8BAAAA,c;;AAWL,MAAMC,SAAN,SAAwBC,YAAxB,CAA6B;EAChC;;EAEA;;EAEA;;EAEA;EAIAC,WAAW,CAACC,MAAD,EAAiBC,MAAjB,EAAuCC,QAAvC,EAAyD;IAChE,MAAMF,MAAN,EAAcC,MAAd,EAAsBC,QAAtB,EAAgC;MAAEC,oBAAoB,EAAEC,4BAAA,CAAqBC;IAA7C,CAAhC;IADgE,iDATxD,KASwD;IAAA;IAAA,+CALhD,EAKgD;IAAA,4DAHjC,EAGiC;IAAA,6CAF5CT,cAAc,CAACU,GAE6B;IAEhE,KAAKC,IAAL,GAAY,KAAKC,kBAAL,CAAwBN,QAAxB,CAAZ;EACH;;EAEe,IAALO,KAAK,GAAY;IACxB,OAAO,KAAKC,KAAL,KAAed,cAAc,CAACU,GAArC;EACH;;EAEmB,IAATK,SAAS,GAAY;IAC5B,OAAO,KAAKD,KAAL,KAAed,cAAc,CAACgB,OAArC;EACH;;EAEiB,IAAPC,OAAO,GAAY;IAC1B,OAAO,KAAKH,KAAL,KAAed,cAAc,CAACkB,KAArC;EACH;;AA1B+B"}