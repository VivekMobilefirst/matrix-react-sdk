{"version":3,"file":"WidgetVariables.js","names":["provideVariables","isReady","WidgetVariableCustomisations"],"sources":["../../src/customisations/WidgetVariables.ts"],"sourcesContent":["/*\n * Copyright 2021 The Matrix.org Foundation C.I.C.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Populate this class with the details of your customisations when copying it.\nimport { ITemplateParams } from \"matrix-widget-api\";\n\n/**\n * Provides a partial set of the variables needed to render any widget. If\n * variables are missing or not provided then they will be filled with the\n * application-determined defaults.\n *\n * This will not be called until after isReady() resolves.\n * @returns {Partial<Omit<ITemplateParams, \"widgetRoomId\">>} The variables.\n */\nfunction provideVariables(): Partial<Omit<ITemplateParams, \"widgetRoomId\">> {\n    return {};\n}\n\n/**\n * Resolves to whether or not the customisation point is ready for variables\n * to be provided. This will block widgets being rendered.\n * @returns {Promise<boolean>} Resolves when ready.\n */\nasync function isReady(): Promise<void> {\n    return; // default no waiting\n}\n\n// This interface summarises all available customisation points and also marks\n// them all as optional. This allows customisers to only define and export the\n// customisations they need while still maintaining type safety.\nexport interface IWidgetVariablesCustomisations {\n    provideVariables?: typeof provideVariables;\n\n    // If not provided, the app will assume that the customisation is always ready.\n    isReady?: typeof isReady;\n}\n\n// A real customisation module will define and export one or more of the\n// customisation points that make up the interface above.\nexport const WidgetVariableCustomisations: IWidgetVariablesCustomisations = {};\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAT,GAA4E;EACxE,OAAO,EAAP;AACH;AAED;AACA;AACA;AACA;AACA;;;AACA,eAAeC,OAAf,GAAwC;EACpC,OADoC,CAC5B;AACX,C,CAED;AACA;AACA;;;AAQA;AACA;AACO,MAAMC,4BAA4D,GAAG,EAArE"}