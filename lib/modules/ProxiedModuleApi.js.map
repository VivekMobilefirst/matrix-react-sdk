{"version":3,"file":"ProxiedModuleApi.js","names":["ProxiedModuleApi","translations","cachedTranslations","registerTranslations","translateString","s","variables","_t","openDialog","title","body","Promise","resolve","Modal","createDialog","ModuleUiDialog","contentFactory","contentProps","moduleApi","finished","then","didOkOrSubmit","model","registerSimpleAccount","username","password","displayName","hsUrl","SdkConfig","get","client","Matrix","createClient","baseUrl","deviceName","PlatformPeg","getDefaultDeviceDisplayName","req","initial_device_display_name","auth","undefined","inhibit_login","creds","registerRequest","catch","resp","session","data","type","profileClient","userId","user_id","deviceId","device_id","accessToken","access_token","setDisplayName","homeserverUrl","overwriteAccountAuth","accountInfo","dispatcher","dispatch","action","Action","OverwriteLogin","credentials","guest","navigatePermalink","uri","andJoin","navigateToPermalink","parts","parsePermalink","roomIdOrAlias","roomId","servers","viaServers","startsWith","getCachedRoomIDForAlias","result","MatrixClientPeg","getRoomIdForAlias","room_id","ViewRoom","via_servers","JoinRoom","getConfigValue","namespace","key","maybeObj"],"sources":["../../src/modules/ProxiedModuleApi.ts"],"sourcesContent":["/*\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { ModuleApi } from \"@matrix-org/react-sdk-module-api/lib/ModuleApi\";\nimport { TranslationStringsObject } from \"@matrix-org/react-sdk-module-api/lib/types/translations\";\nimport { Optional } from \"matrix-events-sdk\";\nimport { DialogProps } from \"@matrix-org/react-sdk-module-api/lib/components/DialogContent\";\nimport React from \"react\";\nimport { AccountAuthInfo } from \"@matrix-org/react-sdk-module-api/lib/types/AccountAuthInfo\";\nimport { PlainSubstitution } from \"@matrix-org/react-sdk-module-api/lib/types/translations\";\nimport * as Matrix from \"matrix-js-sdk/src/matrix\";\n\nimport Modal from \"../Modal\";\nimport { _t } from \"../languageHandler\";\nimport { ModuleUiDialog } from \"../components/views/dialogs/ModuleUiDialog\";\nimport SdkConfig from \"../SdkConfig\";\nimport PlatformPeg from \"../PlatformPeg\";\nimport dispatcher from \"../dispatcher/dispatcher\";\nimport { navigateToPermalink } from \"../utils/permalinks/navigator\";\nimport { parsePermalink } from \"../utils/permalinks/Permalinks\";\nimport { MatrixClientPeg } from \"../MatrixClientPeg\";\nimport { getCachedRoomIDForAlias } from \"../RoomAliasCache\";\nimport { Action } from \"../dispatcher/actions\";\nimport { OverwriteLoginPayload } from \"../dispatcher/payloads/OverwriteLoginPayload\";\n\n/**\n * Glue between the `ModuleApi` interface and the react-sdk. Anticipates one instance\n * to be assigned to a single module.\n */\nexport class ProxiedModuleApi implements ModuleApi {\n    private cachedTranslations: Optional<TranslationStringsObject>;\n\n    /**\n     * All custom translations used by the associated module.\n     */\n    public get translations(): Optional<TranslationStringsObject> {\n        return this.cachedTranslations;\n    }\n\n    /**\n     * @override\n     */\n    public registerTranslations(translations: TranslationStringsObject): void {\n        this.cachedTranslations = translations;\n    }\n\n    /**\n     * @override\n     */\n    public translateString(s: string, variables?: Record<string, PlainSubstitution>): string {\n        return _t(s, variables);\n    }\n\n    /**\n     * @override\n     */\n    public openDialog<\n        M extends object,\n        P extends DialogProps = DialogProps,\n        C extends React.Component = React.Component,\n    >(\n        title: string,\n        body: (props: P, ref: React.RefObject<C>) => React.ReactNode,\n    ): Promise<{ didOkOrSubmit: boolean, model: M }> {\n        return new Promise<{ didOkOrSubmit: boolean, model: M }>((resolve) => {\n            Modal.createDialog(ModuleUiDialog, {\n                title: title,\n                contentFactory: body,\n                contentProps: <DialogProps>{\n                    moduleApi: this,\n                },\n            }, \"mx_CompoundDialog\").finished.then(([didOkOrSubmit, model]) => {\n                resolve({ didOkOrSubmit, model });\n            });\n        });\n    }\n\n    /**\n     * @override\n     */\n    public async registerSimpleAccount(\n        username: string,\n        password: string,\n        displayName?: string,\n    ): Promise<AccountAuthInfo> {\n        const hsUrl = SdkConfig.get(\"validated_server_config\").hsUrl;\n        const client = Matrix.createClient({ baseUrl: hsUrl });\n        const deviceName = SdkConfig.get(\"default_device_display_name\")\n            || PlatformPeg.get().getDefaultDeviceDisplayName();\n        const req = {\n            username,\n            password,\n            initial_device_display_name: deviceName,\n            auth: undefined,\n            inhibit_login: false,\n        };\n        const creds = await (client.registerRequest(req).catch(resp => client.registerRequest({\n            ...req,\n            auth: {\n                session: resp.data.session,\n                type: \"m.login.dummy\",\n            },\n        })));\n\n        if (displayName) {\n            const profileClient = Matrix.createClient({\n                baseUrl: hsUrl,\n                userId: creds.user_id,\n                deviceId: creds.device_id,\n                accessToken: creds.access_token,\n            });\n            await profileClient.setDisplayName(displayName);\n        }\n\n        return {\n            homeserverUrl: hsUrl,\n            userId: creds.user_id,\n            deviceId: creds.device_id,\n            accessToken: creds.access_token,\n        };\n    }\n\n    /**\n     * @override\n     */\n    public async overwriteAccountAuth(accountInfo: AccountAuthInfo): Promise<void> {\n        dispatcher.dispatch<OverwriteLoginPayload>({\n            action: Action.OverwriteLogin,\n            credentials: {\n                ...accountInfo,\n                guest: false,\n            },\n        }, true); // require to be sync to match inherited interface behaviour\n    }\n\n    /**\n     * @override\n     */\n    public async navigatePermalink(uri: string, andJoin?: boolean): Promise<void> {\n        navigateToPermalink(uri);\n\n        const parts = parsePermalink(uri);\n        if (parts.roomIdOrAlias && andJoin) {\n            let roomId = parts.roomIdOrAlias;\n            let servers = parts.viaServers;\n            if (roomId.startsWith(\"#\")) {\n                roomId = getCachedRoomIDForAlias(parts.roomIdOrAlias);\n                if (!roomId) {\n                    // alias resolution failed\n                    const result = await MatrixClientPeg.get().getRoomIdForAlias(parts.roomIdOrAlias);\n                    roomId = result.room_id;\n                    if (!servers) servers = result.servers; // use provided servers first, if available\n                }\n            }\n            dispatcher.dispatch({\n                action: Action.ViewRoom,\n                room_id: roomId,\n                via_servers: servers,\n            });\n\n            if (andJoin) {\n                dispatcher.dispatch({\n                    action: Action.JoinRoom,\n                });\n            }\n        }\n    }\n\n    /**\n     * @override\n     */\n    public getConfigValue<T>(namespace: string, key: string): T {\n        // Force cast to `any` because the namespace won't be known to the SdkConfig types\n        const maybeObj = SdkConfig.get(namespace as any);\n        if (!maybeObj || !(typeof maybeObj === \"object\")) return undefined;\n        return maybeObj[key];\n    }\n}\n"],"mappings":"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"}