{"version":3,"file":"shouldHideEvent.js","names":["memberEventDiff","ev","diff","isMemberEvent","getType","EventType","RoomMember","content","getContent","prevContent","getPrevContent","isMembershipChanged","membership","isJoin","isPart","getStateKey","getSender","isJoinToJoin","isDisplaynameChange","displayname","isAvatarChange","avatar_url","shouldHideEvent","ctx","isEnabled","name","SettingsStore","getValue","getRoomId","isRedacted","getThread","isRelation","RelationType","Replace","eventDiff"],"sources":["../src/shouldHideEvent.ts"],"sourcesContent":["/*\n Copyright 2017 Michael Telatynski <7t3chguy@gmail.com>\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\nimport { MatrixEvent } from \"matrix-js-sdk/src/models/event\";\nimport { EventType, RelationType } from \"matrix-js-sdk/src/@types/event\";\n\nimport SettingsStore from \"./settings/SettingsStore\";\nimport { IRoomState } from \"./components/structures/RoomView\";\n\ninterface IDiff {\n    isMemberEvent: boolean;\n    isJoin?: boolean;\n    isPart?: boolean;\n    isDisplaynameChange?: boolean;\n    isAvatarChange?: boolean;\n}\n\nfunction memberEventDiff(ev: MatrixEvent): IDiff {\n    const diff: IDiff = {\n        isMemberEvent: ev.getType() === EventType.RoomMember,\n    };\n\n    // If is not a Member Event then the other checks do not apply, so bail early.\n    if (!diff.isMemberEvent) return diff;\n\n    const content = ev.getContent();\n    const prevContent = ev.getPrevContent();\n\n    const isMembershipChanged = content.membership !== prevContent.membership;\n    diff.isJoin = isMembershipChanged && content.membership === 'join';\n    diff.isPart = isMembershipChanged && content.membership === 'leave' && ev.getStateKey() === ev.getSender();\n\n    const isJoinToJoin = !isMembershipChanged && content.membership === 'join';\n    diff.isDisplaynameChange = isJoinToJoin && content.displayname !== prevContent.displayname;\n    diff.isAvatarChange = isJoinToJoin && content.avatar_url !== prevContent.avatar_url;\n    return diff;\n}\n\n/**\n * Determines whether the given event should be hidden from timelines.\n * @param ev The event\n * @param ctx An optional RoomContext to pull cached settings values from to avoid\n *     hitting the settings store\n */\nexport default function shouldHideEvent(ev: MatrixEvent, ctx?: IRoomState): boolean {\n    // Accessing the settings store directly can be expensive if done frequently,\n    // so we should prefer using cached values if a RoomContext is available\n    const isEnabled = ctx ?\n        name => ctx[name] :\n        name => SettingsStore.getValue(name, ev.getRoomId());\n\n    // Hide redacted events\n    // Deleted events with a thread are always shown regardless of user preference\n    // to make sure that a thread can be accessible even if the root message is deleted\n    if (ev.isRedacted() && !isEnabled('showRedactions') && !ev.getThread()) return true;\n\n    // Hide replacement events since they update the original tile (if enabled)\n    if (ev.isRelation(RelationType.Replace)) return true;\n\n    const eventDiff = memberEventDiff(ev);\n\n    if (eventDiff.isMemberEvent) {\n        if ((eventDiff.isJoin || eventDiff.isPart) && !isEnabled('showJoinLeaves')) return true;\n        if (eventDiff.isAvatarChange && !isEnabled('showAvatarChanges')) return true;\n        if (eventDiff.isDisplaynameChange && !isEnabled('showDisplaynameChanges')) return true;\n    }\n\n    return false;\n}\n"],"mappings":";;;;;;;;;AAiBA;;AAEA;;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgBA,SAASA,eAAT,CAAyBC,EAAzB,EAAiD;EAC7C,MAAMC,IAAW,GAAG;IAChBC,aAAa,EAAEF,EAAE,CAACG,OAAH,OAAiBC,gBAAA,CAAUC;EAD1B,CAApB,CAD6C,CAK7C;;EACA,IAAI,CAACJ,IAAI,CAACC,aAAV,EAAyB,OAAOD,IAAP;EAEzB,MAAMK,OAAO,GAAGN,EAAE,CAACO,UAAH,EAAhB;EACA,MAAMC,WAAW,GAAGR,EAAE,CAACS,cAAH,EAApB;EAEA,MAAMC,mBAAmB,GAAGJ,OAAO,CAACK,UAAR,KAAuBH,WAAW,CAACG,UAA/D;EACAV,IAAI,CAACW,MAAL,GAAcF,mBAAmB,IAAIJ,OAAO,CAACK,UAAR,KAAuB,MAA5D;EACAV,IAAI,CAACY,MAAL,GAAcH,mBAAmB,IAAIJ,OAAO,CAACK,UAAR,KAAuB,OAA9C,IAAyDX,EAAE,CAACc,WAAH,OAAqBd,EAAE,CAACe,SAAH,EAA5F;EAEA,MAAMC,YAAY,GAAG,CAACN,mBAAD,IAAwBJ,OAAO,CAACK,UAAR,KAAuB,MAApE;EACAV,IAAI,CAACgB,mBAAL,GAA2BD,YAAY,IAAIV,OAAO,CAACY,WAAR,KAAwBV,WAAW,CAACU,WAA/E;EACAjB,IAAI,CAACkB,cAAL,GAAsBH,YAAY,IAAIV,OAAO,CAACc,UAAR,KAAuBZ,WAAW,CAACY,UAAzE;EACA,OAAOnB,IAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;;AACe,SAASoB,eAAT,CAAyBrB,EAAzB,EAA0CsB,GAA1C,EAAqE;EAChF;EACA;EACA,MAAMC,SAAS,GAAGD,GAAG,GACjBE,IAAI,IAAIF,GAAG,CAACE,IAAD,CADM,GAEjBA,IAAI,IAAIC,sBAAA,CAAcC,QAAd,CAAuBF,IAAvB,EAA6BxB,EAAE,CAAC2B,SAAH,EAA7B,CAFZ,CAHgF,CAOhF;EACA;EACA;;EACA,IAAI3B,EAAE,CAAC4B,UAAH,MAAmB,CAACL,SAAS,CAAC,gBAAD,CAA7B,IAAmD,CAACvB,EAAE,CAAC6B,SAAH,EAAxD,EAAwE,OAAO,IAAP,CAVQ,CAYhF;;EACA,IAAI7B,EAAE,CAAC8B,UAAH,CAAcC,mBAAA,CAAaC,OAA3B,CAAJ,EAAyC,OAAO,IAAP;EAEzC,MAAMC,SAAS,GAAGlC,eAAe,CAACC,EAAD,CAAjC;;EAEA,IAAIiC,SAAS,CAAC/B,aAAd,EAA6B;IACzB,IAAI,CAAC+B,SAAS,CAACrB,MAAV,IAAoBqB,SAAS,CAACpB,MAA/B,KAA0C,CAACU,SAAS,CAAC,gBAAD,CAAxD,EAA4E,OAAO,IAAP;IAC5E,IAAIU,SAAS,CAACd,cAAV,IAA4B,CAACI,SAAS,CAAC,mBAAD,CAA1C,EAAiE,OAAO,IAAP;IACjE,IAAIU,SAAS,CAAChB,mBAAV,IAAiC,CAACM,SAAS,CAAC,wBAAD,CAA/C,EAA2E,OAAO,IAAP;EAC9E;;EAED,OAAO,KAAP;AACH"}