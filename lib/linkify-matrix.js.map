{"version":3,"file":"linkify-matrix.js","names":["Type","matrixOpaqueIdLinkifyParser","scanner","parser","utils","token","name","DOT","NUM","TLD","COLON","SYM","HYPHEN","UNDERSCORE","LOCALHOST","domain","tokens","S_START","start","matrixSymbol","createTokenClass","isLink","localpartTokens","domainpartTokens","INITIAL_STATE","tt","LOCALPART_STATE","LOCALPART_STATE_DOT","DOMAINPART_STATE_DOT","DOMAINPART_STATE","PORT_STATE","onUserClick","event","userId","preventDefault","member","RoomMember","dis","dispatch","action","Action","ViewUser","onGroupClick","groupId","showGroupReplacedWithSpacesDialog","onAliasClick","roomAlias","ViewRoom","room_alias","metricsTrigger","metricsViaKeyboard","escapeRegExp","s","replace","ELEMENT_URL_PATTERN","window","location","host","pathname","options","events","href","type","URL","permalink","parsePermalink","click","e","localHref","tryTransformPermalinkToLocalHref","hash","UserId","RoomAlias","alias","roomIdOrAlias","GroupId","formatHref","tryTransformEntityToPermalink","attributes","rel","ignoreTags","className","target","transformed","decodeURIComponent","match","registerPlugin","POUND","PLUS","AT","registerCustomProtocol","linkify","linkifyjs","_linkifyElement","linkifyElement","_linkifyString","linkifyString"],"sources":["../src/linkify-matrix.ts"],"sourcesContent":["/*\nCopyright 2015, 2016 OpenMarket Ltd\nCopyright 2019 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport * as linkifyjs from 'linkifyjs';\nimport { registerCustomProtocol, registerPlugin } from 'linkifyjs';\nimport linkifyElement from 'linkify-element';\nimport linkifyString from 'linkify-string';\nimport { RoomMember } from 'matrix-js-sdk/src/models/room-member';\n\nimport {\n    parsePermalink,\n    tryTransformEntityToPermalink,\n    tryTransformPermalinkToLocalHref,\n} from \"./utils/permalinks/Permalinks\";\nimport dis from './dispatcher/dispatcher';\nimport { Action } from './dispatcher/actions';\nimport { ViewUserPayload } from './dispatcher/payloads/ViewUserPayload';\nimport { ViewRoomPayload } from \"./dispatcher/payloads/ViewRoomPayload\";\nimport { showGroupReplacedWithSpacesDialog } from \"./group_helpers\";\n\nexport enum Type {\n    URL = \"url\",\n    UserId = \"userid\",\n    RoomAlias = \"roomalias\",\n    GroupId = \"groupid\",\n}\n\n// Linkify stuff doesn't type scanner/parser/utils properly :/\nfunction matrixOpaqueIdLinkifyParser({\n    scanner,\n    parser,\n    utils,\n    token,\n    name,\n}: {\n    scanner: any;\n    parser: any;\n    utils: any;\n    token: '#' | '+' | '@';\n    name: Type;\n}) {\n    const {\n        DOT,\n        // IPV4 necessity\n        NUM,\n        TLD,\n        COLON,\n        SYM,\n        HYPHEN,\n        UNDERSCORE,\n        // because 'localhost' is tokenised to the localhost token,\n        // usernames @localhost:foo.com are otherwise not matched!\n        LOCALHOST,\n        domain,\n    } = scanner.tokens;\n\n    const S_START = parser.start;\n    const matrixSymbol = utils.createTokenClass(name, { isLink: true });\n\n    const localpartTokens = [domain, TLD, LOCALHOST, SYM, UNDERSCORE, HYPHEN];\n    const domainpartTokens = [domain, TLD, LOCALHOST, HYPHEN];\n\n    const INITIAL_STATE = S_START.tt(token);\n\n    const LOCALPART_STATE = INITIAL_STATE.tt(domain);\n    for (const token of localpartTokens) {\n        INITIAL_STATE.tt(token, LOCALPART_STATE);\n        LOCALPART_STATE.tt(token, LOCALPART_STATE);\n    }\n    const LOCALPART_STATE_DOT = LOCALPART_STATE.tt(DOT);\n    for (const token of localpartTokens) {\n        LOCALPART_STATE_DOT.tt(token, LOCALPART_STATE);\n    }\n\n    const DOMAINPART_STATE_DOT = LOCALPART_STATE.tt(COLON);\n    const DOMAINPART_STATE = DOMAINPART_STATE_DOT.tt(domain);\n    DOMAINPART_STATE.tt(DOT, DOMAINPART_STATE_DOT);\n    for (const token of domainpartTokens) {\n        DOMAINPART_STATE.tt(token, DOMAINPART_STATE);\n        // we are done if we have a domain\n        DOMAINPART_STATE.tt(token, matrixSymbol);\n    }\n\n    // accept repeated TLDs (e.g .org.uk) but do not accept double dots: ..\n    for (const token of domainpartTokens) {\n        DOMAINPART_STATE_DOT.tt(token, DOMAINPART_STATE);\n    }\n\n    const PORT_STATE = DOMAINPART_STATE.tt(COLON);\n\n    PORT_STATE.tt(NUM, matrixSymbol);\n}\n\nfunction onUserClick(event: MouseEvent, userId: string) {\n    event.preventDefault();\n    const member = new RoomMember(null, userId);\n    if (!member) { return; }\n    dis.dispatch<ViewUserPayload>({\n        action: Action.ViewUser,\n        member: member,\n    });\n}\n\nfunction onGroupClick(event: MouseEvent, groupId: string) {\n    event.preventDefault();\n    showGroupReplacedWithSpacesDialog(groupId);\n}\n\nfunction onAliasClick(event: MouseEvent, roomAlias: string) {\n    event.preventDefault();\n    dis.dispatch<ViewRoomPayload>({\n        action: Action.ViewRoom,\n        room_alias: roomAlias,\n        metricsTrigger: \"Timeline\",\n        metricsViaKeyboard: false,\n    });\n}\n\nconst escapeRegExp = function(s: string): string {\n    return s.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n};\n\n// Recognise URLs from both our local and official Element deployments.\n// Anyone else really should be using matrix.to. vector:// allowed to support Element Desktop relative links.\nexport const ELEMENT_URL_PATTERN =\n    \"^(?:vector://|https?://)?(?:\" +\n        escapeRegExp(window.location.host + window.location.pathname) + \"|\" +\n        \"(?:www\\\\.)?(?:riot|vector)\\\\.im/(?:app|beta|staging|develop)/|\" +\n        \"(?:app|beta|staging|develop)\\\\.element\\\\.io/\" +\n    \")(#.*)\";\n\nexport const options = {\n    events: function(href: string, type: Type | string): Partial<GlobalEventHandlers> {\n        switch (type) {\n            case Type.URL: {\n                // intercept local permalinks to users and show them like userids (in userinfo of current room)\n                try {\n                    const permalink = parsePermalink(href);\n                    if (permalink?.userId) {\n                        return {\n                            // @ts-ignore see https://linkify.js.org/docs/options.html\n                            click: function(e: MouseEvent) {\n                                onUserClick(e, permalink.userId);\n                            },\n                        };\n                    } else {\n                        // for events, rooms etc. (anything other than users)\n                        const localHref = tryTransformPermalinkToLocalHref(href);\n                        if (localHref !== href) {\n                            // it could be converted to a localHref -> therefore handle locally\n                            return {\n                            // @ts-ignore see https://linkify.js.org/docs/options.html\n                                click: function(e: MouseEvent) {\n                                    e.preventDefault();\n                                    window.location.hash = localHref;\n                                },\n                            };\n                        }\n                    }\n                } catch (e) {\n                    // OK fine, it's not actually a permalink\n                }\n                break;\n            }\n            case Type.UserId:\n                return {\n                    // @ts-ignore see https://linkify.js.org/docs/options.html\n                    click: function(e: MouseEvent) {\n                        const userId = parsePermalink(href).userId;\n                        onUserClick(e, userId);\n                    },\n                };\n            case Type.RoomAlias:\n                return {\n                    // @ts-ignore see https://linkify.js.org/docs/options.html\n                    click: function(e: MouseEvent) {\n                        const alias = parsePermalink(href).roomIdOrAlias;\n                        onAliasClick(e, alias);\n                    },\n                };\n\n            case Type.GroupId:\n                return {\n                    // @ts-ignore see https://linkify.js.org/docs/options.html\n                    click: function(e: MouseEvent) {\n                        const groupId = parsePermalink(href).groupId;\n                        onGroupClick(e, groupId);\n                    },\n                };\n        }\n    },\n\n    formatHref: function(href: string, type: Type | string): string {\n        switch (type) {\n            case Type.RoomAlias:\n            case Type.UserId:\n            case Type.GroupId:\n            default: {\n                return tryTransformEntityToPermalink(href);\n            }\n        }\n    },\n\n    attributes: {\n        rel: 'noreferrer noopener',\n    },\n\n    ignoreTags: ['pre', 'code'],\n\n    className: 'linkified',\n\n    target: function(href: string, type: Type | string): string {\n        if (type === Type.URL) {\n            try {\n                const transformed = tryTransformPermalinkToLocalHref(href);\n                if (\n                    transformed !== href || // if it could be converted to handle locally for matrix symbols e.g. @user:server.tdl and matrix.to\n                    decodeURIComponent(href).match(ELEMENT_URL_PATTERN) // for https links to Element domains\n                ) {\n                    return null;\n                } else {\n                    return '_blank';\n                }\n            } catch (e) {\n                // malformed URI\n            }\n        }\n        return null;\n    },\n};\n\n// Run the plugins\nregisterPlugin(Type.RoomAlias, ({ scanner, parser, utils }) => {\n    const token = scanner.tokens.POUND as '#';\n    matrixOpaqueIdLinkifyParser({\n        scanner,\n        parser,\n        utils,\n        token,\n        name: Type.RoomAlias,\n    });\n});\n\nregisterPlugin(Type.GroupId, ({ scanner, parser, utils }) => {\n    const token = scanner.tokens.PLUS as '+';\n    matrixOpaqueIdLinkifyParser({\n        scanner,\n        parser,\n        utils,\n        token,\n        name: Type.GroupId,\n    });\n});\n\nregisterPlugin(Type.UserId, ({ scanner, parser, utils }) => {\n    const token = scanner.tokens.AT as '@';\n    matrixOpaqueIdLinkifyParser({\n        scanner,\n        parser,\n        utils,\n        token,\n        name: Type.UserId,\n    });\n});\n\nregisterCustomProtocol(\"matrix\", true);\n\nexport const linkify = linkifyjs;\nexport const _linkifyElement = linkifyElement;\nexport const _linkifyString = linkifyString;\n"],"mappings":"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"}